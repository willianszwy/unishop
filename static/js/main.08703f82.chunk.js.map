{"version":3,"sources":["assets/logo.svg","hooks/formHooks.js","services/auth.js","services/api.js","components/Button/index.js","components/Input/Input.styled.js","components/ErrorShow/ErrorShow.styled.js","components/ErrorShow/index.js","components/Loader/index.js","views/login.js","views/logout.js","views/recovery.js","views/register.js","views/home.styled.js","components/AppBar/index.js","helpers.js","views/home.js","views/profile.js","components/Uploader/index.js","views/editProfile.js","components/BuyBar/index.js","components/AlertDialog/index.js","components/Pedido/index.js","components/Entrega/index.js","views/buy.js","components/SellBar/index.js","views/productList.js","views/sells.js","views/sell.js","components/Preview/index.js","views/createProduct.js","views/config.js","views/confirm.js","views/password.js","views/confirmEmail.js","components/Quantity/index.js","views/product.js","views/history.js","views/purchase.js","routes.js","global.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useForm","callback","initialState","useState","inputs","setInputs","errors","setErrors","handleSubmit","event","preventDefault","handleInputChange","persist","target","name","value","isAuthenticated","localStorage","getItem","getUser","JSON","parse","setUser","user","setItem","stringify","api","axios","create","baseURL","process","interceptors","request","use","a","config","token","headers","Authorization","StyledButton","withStyles","root","background","borderRadius","border","color","height","padding","marginTop","Button","styled","input","props","theme","grey100","grey500","fontSize","grey400","ErrorShow","div","useStyles","makeStyles","position","top","zIndex","width","Loader","classes","show","LinearProgress","className","card","img","display","margin","button","marginBottom","Login","history","push","React","loading","setLoading","username","password","post","then","response","data","access_token","catch","error","msg","showPassword","values","setValues","Container","maxWidth","Card","CardContent","src","logo","alt","onSubmit","TextField","type","onChange","fullWidth","label","variant","required","FormControl","InputLabel","htmlFor","FilledInput","id","endAdornment","InputAdornment","IconButton","aria-label","onClick","onMouseDown","size","Link","component","RLink","to","Logout","removeItem","Recovery","email","err","Register","validateForm","usuario_senha","usuario_senha_confirmacao","usuario_nome","usuario_email","primary","StyledHome","stickToBottom","bottom","withRouter","active","setValue","count","setCount","useEffect","usuario_id","get","parseInt","total_vendas","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","Badge","badgeContent","max","getImageURL","path","media","Home","searchValue","setSearchValue","products","setProducts","handleSearch","search","placeholder","onRequestSearch","onCancelSearch","style","map","product","key","produto_id","CardMedia","image","produto_foto","title","produto_nome","Typography","align","Rating","precision","avaliacao","readOnly","gutterBottom","produto_descricao","produto_valor","toLocaleString","currency","avatar","bigAvatar","Profile","usuario","setUsuario","Avatar","usuario_foto","alignSelf","CardActions","startIcon","isDragAccept","isDragReject","isDragActive","getColor","Uploader","useDropzone","accept","multiple","onDrop","acceptedFiles","getRootProps","getInputProps","EditProfile","preview","setPreview","selectedFile","setSelectedFile","objectUrl","URL","createObjectURL","revokeObjectURL","put","file","formData","FormData","append","uploaded_file","console","log","AlertDialog","handleCancel","onCancel","Dialog","open","onClose","aria-labelledby","aria-describedby","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","content","DialogActions","onAccept","autoFocus","overflowX","Pedido","pedido","Table","TableHead","TableRow","TableCell","colSpan","pedido_id","TableBody","undefined","pedido_data","Date","timeZone","pedido_data_entrega","pedido_produto_nome","pedido_produto_descricao","pedido_valor","pedido_qtde","Entrega","vendedor","selectedValue","setSelectedValue","entrega","setEntrega","handleChange","usuario_local_atend","usuario_status_entrega","FormLabel","Radio","checked","inputProps","multiline","rows","usuario_status_local","InputProps","justifyContent","alignItems","flexWrap","spacing","Buy","enqueueSnackbar","useSnackbar","pedido_entrega_local","pedido_produto_id","pedido_retirar","pedido_status","pedido_status_entrega","produto_usuario_id","usuario_status_venda","setPedido","finalizar","setFinalizar","anchorOrigin","vertical","horizontal","finalizarCompra","selected","delete","backgroundColor","palette","paper","fab","right","ProductList","itens","setItens","ListItem","ListItemAvatar","ListItemText","secondary","ListItemSecondaryAction","edge","Divider","container","List","Fab","disabled","Sells","vendas","setVendas","sells","sell","ListItemIcon","Fragment","inline","sellsMap","Sell","useParams","entregaConfirma","setEntregaConfirma","pedido_avaliacao","pedido_usuario_id","venda","setVenda","comprador","setComprador","CardHeader","subheader","Preview","initialData","produto_qtde","produto_status","CreateProduct","setShow","productHandle","startAdornment","FormGroup","FormControlLabel","control","Switch","Config","handleStatusChange","Confirm","Password","hash","password_repeat","handleClickShowPassword","handleMouseDownPassword","ConfirmEmail","extendedIcon","marginRight","Quantity","quantity","setQuantity","Grid","direction","justify","item","xs","textField","Product","setProduct","setVendedor","quantidade","setQuantidade","comprarConfirma","setComprarConfirma","res","showChip","params","Chip","pedido_vendedor_id","History","compras","setCompras","updateRating","index","_compras","Purchase","PrivateRoute","Component","rest","render","usuario_status","pathname","state","from","location","Routes","exact","GlobalStyles","createGlobalStyle","primaryLight","primaryHover","mobile","grey200","grey300","grey600","grey700","grey800","grey900","App","maxSnack","CssBaseline","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08703f82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.01c07428.svg\";","import { useState } from \"react\";\n\nconst useForm = (callback, initialState) => {\n    const [inputs, setInputs] = useState(initialState);\n    const [errors, setErrors] = useState(\"\");\n    const handleSubmit = event => {\n        if (event) {\n            event.preventDefault();\n        }\n        callback(inputs);\n    };\n\n    const handleInputChange = event => {\n        setErrors(\"\");\n        event.persist();\n        setInputs(inputs => ({\n            ...inputs,\n            [event.target.name]: event.target.value\n        }));\n    };\n\n    return {\n        errors,\n        setErrors,\n        handleSubmit,\n        handleInputChange,\n        inputs,\n        setInputs\n    };\n};\nexport default useForm;\n","export const TOKEN_KEY = \"Unishop-Token\";\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\nexport const login = data => {\n    localStorage.setItem(TOKEN_KEY, data.access_token);\n    setUser(data.user);\n};\n\nexport const logout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(\"currentUser\");\n};\nexport const getUser = () => JSON.parse(localStorage.getItem(\"currentUser\"));\nexport const setUser = user =>\n    localStorage.setItem(\"currentUser\", JSON.stringify(user));\nexport const isActivate = () =>\n    parseInt(getUser().usuario_status) === 1 ? true : false;\n","import axios from \"axios\";\nimport { getToken } from \"./auth\";\n\nconst api = axios.create({\n    // baseURL: \"http://localhost:5000\"\n    baseURL: process.env.REACT_APP_BACK_SERVER\n});\n\napi.interceptors.request.use(async config => {\n    const token = getToken();\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\nexport default api;\n","import Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst StyledButton = withStyles({\n    root: {\n        background:\n            \"linear-gradient(90deg,  rgb(252, 108, 53), rgb(170, 18, 159))\",\n        borderRadius: 5,\n        border: 0,\n        color: \"white\",\n        height: 48,\n        padding: \"0 30px\",\n        marginTop: \"8px\"\n    }\n})(Button);\n\nexport default StyledButton;\n","import styled from \"styled-components\";\n\nexport const StyledInput = styled.input`\n    display: block;\n    width: 100%;\n    background: ${props => props.theme.grey100};\n    color: black;\n    /* border: none; */\n    border: 2px solid ${props => props.theme.grey500};\n    padding: 1em 1.5rem;\n    margin: 1rem 0;\n    font-size: ${props => props.theme.fontSize};\n    border-radius: ${props => props.theme.borderRadius};\n    :focus {\n        border: 2px solid ${props => props.theme.grey400};\n        outline: none;\n    }\n`;\n","import styled from \"styled-components\";\n\nexport const StyledErrorShow = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    min-height: 50px;\n    color: hsl(0, 100%, 60%);\n    background: hsl(0, 100%, 90%);\n    border: 1px solid hsl(0, 100%, 60%);\n    border-radius: 5px;\n`;\n","import { StyledErrorShow } from \"./ErrorShow.styled\";\n\nconst ErrorShow = StyledErrorShow;\n\nexport default ErrorShow;\n","import React from \"react\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    root: {\n        position: \"fixed\",\n        top: 0,\n        zIndex: 9999,\n        width: \"100%\"\n    }\n});\n\nconst Loader = props => {\n    const classes = useStyles();\n    return (\n        <div>\n            {props.show && (\n                <LinearProgress className={classes.root} color=\"secondary\" />\n            )}\n        </div>\n    );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport logo from \"../assets/logo.svg\";\nimport useForm from \"../hooks/formHooks\";\nimport api from \"../services/api\";\nimport { login, isAuthenticated } from \"../services/auth\";\nimport { Link as RLink } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport StyledButton from \"../components/Button\";\nimport { ErrorShow } from \"../components\";\nimport Link from \"@material-ui/core/Link\";\nimport { Card, CardContent, Container } from \"@material-ui/core\";\nimport Loader from \"../components/Loader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"10px\"\n    },\n    img: {\n        display: \"block\",\n        width: \"50%\",\n        margin: \"20px auto\"\n    },\n    button: {\n        marginBottom: \"8px\"\n    }\n}));\n\nconst Login = props => {\n    if (isAuthenticated()) {\n        props.history.push(\"/\");\n    }\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const loginHandle = inputs => {\n        setErrors(\"\");\n        setLoading(true);\n        const { username, password } = inputs;\n        api.post(\"/login\", {\n            username: username,\n            password: password\n        })\n            .then(response => {\n                setLoading(false);\n                login(response.data);\n\n                props.history.push(\"/\");\n            })\n            .catch(error => {\n                setLoading(false);\n                if (error.response) {\n                    setErrors(error.response.data.msg);\n                } else if (error.request) {\n                    setErrors(\"Erro na conexão ao servidor\");\n                } else {\n                    setErrors(error);\n                }\n            });\n    };\n\n    const initialState = { username: \"\", password: \"\" };\n    const {\n        inputs,\n        handleInputChange,\n        handleSubmit,\n        errors,\n        setErrors\n    } = useForm(loginHandle, initialState);\n\n    const [values, setValues] = React.useState({\n        showPassword: false\n    });\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = event => {\n        event.preventDefault();\n    };\n\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <Card className={classes.card}>\n                    <CardContent>\n                        <img src={logo} className={classes.img} alt=\"logo\" />\n                        <form onSubmit={handleSubmit}>\n                            {errors && <ErrorShow>{errors}</ErrorShow>}\n                            <div>\n                                <TextField\n                                    type=\"email\"\n                                    name=\"username\"\n                                    onChange={handleInputChange}\n                                    value={inputs.username}\n                                    fullWidth\n                                    label=\"Email\"\n                                    margin=\"normal\"\n                                    variant=\"filled\"\n                                    required\n                                />\n                            </div>\n                            <div>\n                                <FormControl\n                                    variant=\"filled\"\n                                    fullWidth\n                                    required\n                                >\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\n                                        Senha\n                                    </InputLabel>\n                                    <FilledInput\n                                        id=\"filled-adornment-password\"\n                                        name=\"password\"\n                                        type={\n                                            values.showPassword\n                                                ? \"text\"\n                                                : \"password\"\n                                        }\n                                        value={inputs.password}\n                                        onChange={handleInputChange}\n                                        fullWidth\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={\n                                                        handleClickShowPassword\n                                                    }\n                                                    onMouseDown={\n                                                        handleMouseDownPassword\n                                                    }\n                                                >\n                                                    {values.showPassword ? (\n                                                        <Visibility />\n                                                    ) : (\n                                                        <VisibilityOff />\n                                                    )}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n                            </div>\n                            <div>\n                                <StyledButton\n                                    type=\"submit\"\n                                    size=\"large\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    className={classes.button}\n                                >\n                                    Entrar\n                                </StyledButton>\n                            </div>\n                        </form>\n\n                        <Link component={RLink} to=\"/recovery\">\n                            Esqueci a senha\n                        </Link>\n                        <Button component={RLink} to=\"register\" fullWidth>\n                            Registre-se\n                        </Button>\n                    </CardContent>\n                </Card>\n            </Container>\n        </div>\n    );\n};\n\nexport default Login;\n","import { logout } from \"../services/auth\";\n\nconst Logout = props => {\n    logout();\n    props.history.push(\"/\");\n    return \"\";\n};\n\nexport default Logout;\n","import React from \"react\";\nimport useForm from \"../hooks/formHooks\";\nimport api from \"../services/api\";\nimport { isAuthenticated } from \"../services/auth\";\nimport { Link } from \"react-router-dom\";\nimport StyledButton from \"../components/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Card, CardContent, Container, IconButton } from \"@material-ui/core\";\nimport Loader from \"../components/Loader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"10px\"\n    }\n}));\n\nconst Recovery = props => {\n    if (isAuthenticated()) {\n        props.history.push(\"/\");\n    }\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const recoveryHandle = inputs => {\n        setLoading(true);\n        const { email } = inputs;\n        api.post(\"/recuperar\", {\n            email\n        })\n            .then(response => {\n                setLoading(false);\n                props.history.push(\"/\");\n            })\n            .catch(err => {\n                setLoading(false);\n            });\n    };\n    const initialState = { email: \"\" };\n    const { inputs, handleInputChange, handleSubmit } = useForm(\n        recoveryHandle,\n        initialState\n    );\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <Card className={classes.card}>\n                    <CardContent>\n                        <div>\n                            <IconButton\n                                size=\"small\"\n                                component={Link}\n                                to=\"/login\"\n                            >\n                                <ArrowBackIosIcon />\n                            </IconButton>\n                        </div>\n                        <form onSubmit={handleSubmit}>\n                            <div>\n                                <TextField\n                                    type=\"email\"\n                                    name=\"email\"\n                                    label=\"Email\"\n                                    onChange={handleInputChange}\n                                    value={inputs.email}\n                                    margin=\"normal\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n\n                            <StyledButton type=\"submit\" fullWidth>\n                                Enviar\n                            </StyledButton>\n                        </form>\n                    </CardContent>\n                </Card>\n            </Container>\n        </div>\n    );\n};\n\nexport default Recovery;\n","import React from \"react\";\nimport useForm from \"../hooks/formHooks\";\nimport api from \"../services/api\";\nimport { isAuthenticated } from \"../services/auth\";\nimport { Link } from \"react-router-dom\";\nimport StyledButton from \"../components/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { ErrorShow } from \"../components\";\nimport { Card, CardContent, IconButton, Container } from \"@material-ui/core\";\nimport Loader from \"../components/Loader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"10px\"\n    },\n    img: {\n        display: \"block\",\n        width: \"50%\",\n        margin: \"20px auto\"\n    },\n    button: {\n        marginBottom: \"8px\"\n    }\n}));\n\nconst Register = props => {\n    if (isAuthenticated()) {\n        props.history.push(\"/\");\n    }\n    const classes = useStyles();\n    const registerHandle = inputs => {\n        setLoading(true);\n        const { usuario_nome, usuario_email, usuario_senha } = inputs;\n        if (validateForm()) {\n            api.post(\"/usuarios\", {\n                usuario_nome,\n                usuario_email,\n                usuario_senha\n            })\n                .then(response => {\n                    setLoading(false);\n                    props.history.push(\"/\");\n                })\n                .catch(error => {\n                    setLoading(false);\n                    if (error.response) {\n                        setErrors(error.response.data.msg);\n                    } else if (error.request) {\n                        setErrors(\"Erro ao conectar o servidor\");\n                    } else {\n                        setErrors(error);\n                    }\n                });\n        } else {\n            setLoading(false);\n            setErrors(\"Senhas digitadas não conferem!\");\n        }\n    };\n\n    const [loading, setLoading] = React.useState(false);\n\n    const validateForm = () => {\n        return inputs.usuario_senha === inputs.usuario_senha_confirmacao;\n    };\n    const initialState = {\n        usuario_nome: \"\",\n        usuario_email: \"\",\n        usuario_senha: \"\",\n        usuario_senha_confirmacao: \"\"\n    };\n    const {\n        inputs,\n        handleInputChange,\n        handleSubmit,\n        errors,\n        setErrors\n    } = useForm(registerHandle, initialState);\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <Card className={classes.card}>\n                    <CardContent>\n                        <div>\n                            <IconButton\n                                size=\"small\"\n                                component={Link}\n                                to=\"/login\"\n                            >\n                                <ArrowBackIosIcon />\n                            </IconButton>\n                        </div>\n                        {errors && <ErrorShow>{errors}</ErrorShow>}\n                        <form onSubmit={handleSubmit}>\n                            <div>\n                                <TextField\n                                    type=\"text\"\n                                    name=\"usuario_nome\"\n                                    label=\"Nome Completo\"\n                                    onChange={handleInputChange}\n                                    value={inputs.usuario_nome}\n                                    margin=\"dense\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    type=\"email\"\n                                    name=\"usuario_email\"\n                                    label=\"Email\"\n                                    onChange={handleInputChange}\n                                    value={inputs.usuario_email}\n                                    margin=\"dense\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    type=\"password\"\n                                    label=\"Senha\"\n                                    name=\"usuario_senha\"\n                                    onChange={handleInputChange}\n                                    value={inputs.usuario_senha}\n                                    fullWidth\n                                    margin=\"dense\"\n                                    variant=\"filled\"\n                                    required\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    type=\"password\"\n                                    name=\"usuario_senha_confirmacao\"\n                                    onChange={handleInputChange}\n                                    value={inputs.usuario_senha_confirmacao}\n                                    fullWidth\n                                    label=\"Confirmar Senha\"\n                                    margin=\"dense\"\n                                    variant=\"filled\"\n                                    required\n                                />\n                            </div>\n                            <StyledButton type=\"submit\" primary fullWidth>\n                                Cadastrar\n                            </StyledButton>\n                        </form>\n                    </CardContent>\n                </Card>\n            </Container>\n        </div>\n    );\n};\n\nexport default Register;\n","import styled from \"styled-components\";\n\nexport const StyledHome = styled.div`\n    margin: 80px 0;\n\n    .search-menu {\n        width: 100%;\n        position: fixed;\n        z-index: 999;\n        top: 0;\n        left: 0;\n        padding: 0 15px;\n    }\n`;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { getUser } from \"../../services/auth\";\nimport api from \"../../services/api\";\n\nconst useStyles = makeStyles({\n    stickToBottom: {\n        width: \"100%\",\n        position: \"fixed\",\n        bottom: 0,\n        zIndex: 1000\n    }\n});\n\nconst AppBar = props => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(props.active);\n    const [count, setCount] = React.useState(0);\n\n    React.useEffect(() => {\n        const user = getUser();\n        const id = user ? user.usuario_id : \"\";\n        api.get(`/usuarios/${id}/vendas/total`).then(response => {\n            setCount(parseInt(response.data.total_vendas));\n        });\n    }, []);\n\n    return (\n        <BottomNavigation\n            className={classes.stickToBottom}\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n            }}\n            showLabels\n        >\n            <BottomNavigationAction\n                label=\"Buscar\"\n                icon={<SearchIcon />}\n                component={Link}\n                to=\"/\"\n            />\n            <BottomNavigationAction\n                label=\"Vender\"\n                icon={\n                    <Badge badgeContent={count} max={5} color=\"secondary\">\n                        <MonetizationOnIcon />\n                    </Badge>\n                }\n                component={Link}\n                to=\"/sells\"\n            />\n            <BottomNavigationAction\n                label=\"Comprar\"\n                icon={<ShoppingCartIcon />}\n                component={Link}\n                to=\"/history\"\n            />\n            <BottomNavigationAction\n                label=\"Perfil\"\n                icon={<AccountCircleIcon />}\n                component={Link}\n                to=\"/profile\"\n            />\n        </BottomNavigation>\n    );\n};\n\nexport default withRouter(AppBar);\n","const getImageURL = path => process.env.REACT_APP_STATIC_SERVER + path;\nexport default getImageURL;\n","import React from \"react\";\nimport { StyledHome } from \"./home.styled\";\nimport AppBar from \"../components/AppBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport SearchBar from \"material-ui-search-bar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardMedia } from \"@material-ui/core\";\nimport api from \"../services/api\";\nimport Loader from \"../components/Loader\";\nimport { Link as RLink } from \"react-router-dom\";\n\nimport { Rating } from \"@material-ui/lab\";\n\nimport getImageURL from \"../helpers\";\n\nconst useStyles = makeStyles({\n    card: {\n        marginBottom: \"15px\"\n    },\n    media: {\n        height: 200\n    }\n});\n\nconst Home = () => {\n    const classes = useStyles();\n    // const user = getUser();\n    const [searchValue, setSearchValue] = React.useState(\"\");\n    const [products, setProducts] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n\n    React.useEffect(() => {\n        handleSearch(\"\");\n    }, []);\n\n    const handleSearch = search => {\n        setLoading(true);\n        api.get(\"/produtos/busca?q=\" + search).then(response => {\n            setProducts(response.data);\n            setLoading(false);\n        });\n    };\n\n    return (\n        <div>\n            <Loader show={loading} />\n            <StyledHome>\n                <Container maxWidth=\"sm\">\n                    <div className=\"search-menu\">\n                        <SearchBar\n                            placeholder=\"Busca\"\n                            value={searchValue}\n                            onChange={value => setSearchValue(value)}\n                            onRequestSearch={() => handleSearch(searchValue)}\n                            onCancelSearch={() => setSearchValue(\"\")}\n                            style={{\n                                margin: \"20px auto\",\n                                maxWidth: 600\n                            }}\n                        />\n                    </div>\n                    {products.map(product => {\n                        return (\n                            <RLink\n                                key={product.produto_id}\n                                to={`/product/${product.produto_id}`}\n                            >\n                                <Card className={classes.card}>\n                                    <CardMedia\n                                        className={classes.media}\n                                        image={getImageURL(\n                                            product.produto_foto\n                                        )}\n                                        title={product.produto_nome}\n                                    />\n                                    <CardContent>\n                                        <Typography\n                                            variant=\"body2\"\n                                            align=\"right\"\n                                        >\n                                            <Rating\n                                                name=\"half-rating\"\n                                                precision={0.5}\n                                                value={product.avaliacao}\n                                                readOnly\n                                            />\n                                        </Typography>\n                                        <Typography\n                                            variant=\"h5\"\n                                            component=\"h2\"\n                                            gutterBottom\n                                        >\n                                            {product.produto_nome}\n                                        </Typography>\n\n                                        <Typography\n                                            variant=\"body2\"\n                                            component=\"p\"\n                                        >\n                                            {product.produto_descricao}\n                                        </Typography>\n\n                                        <Typography\n                                            variant=\"h4\"\n                                            component=\"h1\"\n                                            align=\"right\"\n                                        >\n                                            {product.produto_valor.toLocaleString(\n                                                \"pt-BR\",\n                                                {\n                                                    style: \"currency\",\n                                                    currency: \"BRL\"\n                                                }\n                                            )}\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </RLink>\n                        );\n                    })}\n                </Container>\n            </StyledHome>\n            <AppBar active={0} />\n        </div>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport AppBar from \"../components/AppBar\";\nimport Loader from \"../components/Loader\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Avatar, Typography, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getUser } from \"../services/auth\";\nimport api from \"../services/api\";\nimport getImageURL from \"../helpers\";\nimport StyledButton from \"../components/Button\";\nimport { Link as RLink } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst useStyles = makeStyles({\n    card: {\n        marginTop: \"10px\"\n    },\n    avatar: {\n        // margin: 10\n    },\n    bigAvatar: {\n        margin: \"10px auto\",\n        width: 120,\n        height: 120\n    }\n});\n\nconst Profile = () => {\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [usuario, setUsuario] = React.useState(getUser());\n    React.useEffect(() => {\n        setLoading(true);\n        api.get(`/usuarios/${usuario.usuario_id}`).then(response => {\n            setUsuario(response.data);\n            setLoading(false);\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Avatar\n                            alt=\"usuario\"\n                            src={getImageURL(usuario.usuario_foto)}\n                            className={classes.bigAvatar}\n                            style={{ alignSelf: \"center\" }}\n                        />\n                        <Typography\n                            variant=\"h5\"\n                            component=\"h2\"\n                            gutterBottom\n                            align=\"center\"\n                        >\n                            {usuario.usuario_nome}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button\n                            size=\"large\"\n                            fullWidth\n                            startIcon={<EditIcon />}\n                            component={RLink}\n                            to=\"/editProfile\"\n                        >\n                            Editar\n                        </Button>\n                    </CardActions>\n                    <CardActions>\n                        <StyledButton fullWidth component={RLink} to=\"/logout\">\n                            Sair\n                        </StyledButton>\n                    </CardActions>\n                </Card>\n            </Container>\n            <AppBar active={3} />\n        </div>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport styled from \"styled-components\";\n\nconst getColor = props => {\n    if (props.isDragAccept) {\n        return \"#00e676\";\n    }\n    if (props.isDragReject) {\n        return \"#ff1744\";\n    }\n    if (props.isDragActive) {\n        return \"#2196f3\";\n    }\n    return \"#eeeeee\";\n};\n\nconst Container = styled.div`\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 5px;\n    border-width: 2px;\n    border-radius: 2px;\n    border-color: ${props => getColor(props)};\n    border-style: dashed;\n    background-color: #fafafa;\n    /* color: #bdbdbd; */\n    color: rgba(0, 0, 0, 0.54);\n    outline: none;\n    transition: border 0.24s ease-in-out;\n    cursor: pointer;\n`;\n\nconst Uploader = props => {\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({\n        accept: \"image/*\",\n        multiple: false,\n        onDrop: acceptedFiles => {\n            props.onDrop(acceptedFiles);\n        }\n    });\n\n    return (\n        <div className=\"container\">\n            <Container\n                {...getRootProps({ isDragActive, isDragAccept, isDragReject })}\n            >\n                <input {...getInputProps()} />\n                <p>clique aqui para carregar uma foto</p>\n            </Container>\n        </div>\n    );\n};\n\nexport default Uploader;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport AppBar from \"../components/AppBar\";\nimport Loader from \"../components/Loader\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getUser, setUser } from \"../services/auth\";\nimport api from \"../services/api\";\nimport getImageURL from \"../helpers\";\nimport StyledButton from \"../components/Button\";\nimport Uploader from \"../components/Uploader\";\n\nconst useStyles = makeStyles({\n    card: {\n        marginTop: \"10px\"\n    },\n    avatar: {\n        // margin: 10\n    },\n    bigAvatar: {\n        margin: \"10px auto\",\n        width: 120,\n        height: 120\n    }\n});\n\nconst EditProfile = props => {\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(false);\n    const [usuario, setUsuario] = React.useState({\n        ...getUser(),\n        usuario_senha: \"\"\n    });\n\n    const [preview, setPreview] = React.useState(\"\");\n    const [selectedFile, setSelectedFile] = React.useState();\n\n    React.useEffect(() => {\n        setLoading(true);\n        api.get(`/usuarios/${usuario.usuario_id}`).then(response => {\n            setUsuario({ ...usuario, ...response.data });\n            setPreview(getImageURL(response.data.usuario_foto));\n            setLoading(false);\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (!selectedFile) {\n            setPreview(\"\");\n            return;\n        }\n\n        const objectUrl = URL.createObjectURL(selectedFile);\n        setPreview(objectUrl);\n\n        return () => URL.revokeObjectURL(objectUrl);\n    }, [selectedFile]);\n\n    const uploadHandle = file => {\n        setSelectedFile(file[0]);\n        let formData = new FormData();\n        formData.append(\"image\", file[0]);\n        setLoading(true);\n        api.post(\"/upload\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        })\n            .then(response => {\n                setLoading(false);\n                setUsuario({\n                    ...usuario,\n                    usuario_foto: response.data.uploaded_file\n                });\n            })\n            .catch(function() {\n                console.log(\"FAILURE!!\");\n            });\n    };\n\n    const handleInputChange = event => {\n        setUsuario({\n            ...usuario,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const handleSubmit = event => {\n        if (event) {\n            event.preventDefault();\n        }\n        setLoading(true);\n        api.put(`/usuarios/${usuario.usuario_id}`, usuario).then(response => {\n            setUser(usuario);\n            setLoading(false);\n            props.history.push(\"/profile\");\n        });\n    };\n\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <Card className={classes.card}>\n                    <form onSubmit={handleSubmit}>\n                        <CardContent>\n                            <Avatar\n                                alt=\"Foto usuario\"\n                                src={preview}\n                                className={classes.bigAvatar}\n                                style={{ alignSelf: \"center\" }}\n                            />\n                            <Uploader onDrop={uploadHandle} />\n\n                            <input\n                                name=\"usuario_foto\"\n                                onChange={handleInputChange}\n                                value={usuario.usuario_foto}\n                                style={{ display: \"none\" }}\n                            />\n                            <TextField\n                                type=\"text\"\n                                name=\"usuario_nome\"\n                                label=\"Nome\"\n                                onChange={handleInputChange}\n                                value={usuario.usuario_nome}\n                                margin=\"dense\"\n                                variant=\"filled\"\n                                fullWidth\n                                required\n                            />\n                            <TextField\n                                type=\"password\"\n                                name=\"usuario_senha\"\n                                label=\"Nova Senha\"\n                                onChange={handleInputChange}\n                                value={usuario.usuario_senha}\n                                margin=\"dense\"\n                                variant=\"filled\"\n                                fullWidth\n                            />\n                        </CardContent>\n                        <CardActions>\n                            <StyledButton fullWidth type=\"submit\">\n                                Salvar\n                            </StyledButton>\n                        </CardActions>\n                    </form>\n                </Card>\n            </Container>\n            <AppBar active={3} />\n        </div>\n    );\n};\n\nexport default EditProfile;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nconst useStyles = makeStyles({\n    stickToBottom: {\n        width: \"100%\",\n        position: \"fixed\",\n        bottom: 0,\n        zIndex: 1000\n    }\n});\n\nconst BuyBar = props => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(props.active);\n    return (\n        <BottomNavigation\n            className={classes.stickToBottom}\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n            }}\n            showLabels\n        >\n            <BottomNavigationAction\n                label=\"Home\"\n                icon={<HomeIcon />}\n                component={Link}\n                to=\"/\"\n            />\n            <BottomNavigationAction\n                label=\"finalizar\"\n                icon={<ShoppingCartIcon />}\n                component={Link}\n                to=\"/buy\"\n            />\n            <BottomNavigationAction\n                label=\"Histórico\"\n                icon={<HistoryIcon />}\n                component={Link}\n                to=\"/history\"\n            />\n        </BottomNavigation>\n    );\n};\n\nexport default withRouter(BuyBar);\n","import React from \"react\";\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button\n} from \"@material-ui/core\";\n\nconst AlertDialog = props => {\n    const handleCancel = () => {\n        props.onCancel();\n    };\n\n    const handleAccept = () => {\n        props.onAccept();\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                onClose={handleCancel}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                disableBackdropClick\n                disableEscapeKeyDown\n            >\n                <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {props.content}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCancel} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleAccept} color=\"primary\" autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default AlertDialog;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: \"100%\",\n        overflowX: \"auto\"\n    }\n}));\n\nconst Pedido = ({ pedido }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Table aria-label=\"spanning table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\" colSpan={3}>\n                            Detalhes Pedido № {pedido.pedido_id}\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {pedido.pedido_data === undefined ? null : (\n                        <TableRow>\n                            <TableCell>\n                                <b>Data:</b>\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                {new Date(\n                                    pedido.pedido_data\n                                ).toLocaleString(\"pt-BR\", { timeZone: \"UTC\" })}\n                            </TableCell>\n                        </TableRow>\n                    )}\n                    {pedido.pedido_data_entrega ? (\n                        <TableRow>\n                            <TableCell>\n                                <b>Entrega:</b>\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                {new Date(\n                                    pedido.pedido_data_entrega\n                                ).toLocaleString(\"pt-BR\", { timeZone: \"UTC\" })}\n                            </TableCell>\n                        </TableRow>\n                    ) : null}\n                    <TableRow>\n                        <TableCell>\n                            <b>Produto:</b>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                            {pedido.pedido_produto_nome}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>\n                            <b>Descrição:</b>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                            {pedido.pedido_produto_descricao}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>\n                            <b>Valor Unitário:</b>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                            {pedido.pedido_valor.toLocaleString(\"pt-BR\", {\n                                style: \"currency\",\n                                currency: \"BRL\"\n                            })}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>\n                            <b>Quantidade:</b>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                            {pedido.pedido_qtde}\n                        </TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            <br />\n            <Typography variant=\"h5\" component=\"h2\" align=\"right\" gutterBottom>\n                Total:{\" \"}\n                {(pedido.pedido_valor * pedido.pedido_qtde).toLocaleString(\n                    \"pt-BR\",\n                    {\n                        style: \"currency\",\n                        currency: \"BRL\"\n                    }\n                )}\n            </Typography>\n        </div>\n    );\n};\n\nexport default Pedido;\n","import React from \"react\";\nimport { Radio, FormLabel, TextField } from \"@material-ui/core\";\n\nconst Entrega = ({ vendedor, onChange }) => {\n    const [selectedValue, setSelectedValue] = React.useState(\"e\");\n    const [entrega, setEntrega] = React.useState(\"\");\n\n    const handleChange = event => {\n        setSelectedValue(event.target.value);\n        if (event.target.value === \"f\") {\n            setEntrega(\"\");\n            onChange(event.target.value, vendedor.usuario_local_atend);\n        } else {\n            onChange(event.target.value, entrega);\n        }\n    };\n\n    const handleInput = event => {\n        setEntrega(event.target.value);\n        onChange(selectedValue, event.target.value);\n    };\n\n    return (\n        <div>\n            {parseInt(vendedor.usuario_status_entrega) === 1 ? (\n                <div>\n                    <FormLabel component=\"legend\">\n                        <Radio\n                            checked={selectedValue === \"e\"}\n                            onChange={handleChange}\n                            value=\"e\"\n                            name=\"radio-button\"\n                            inputProps={{ \"aria-label\": \"A\" }}\n                            required\n                        />\n                        Entregar:\n                    </FormLabel>\n                    {selectedValue === \"e\" ? (\n                        <TextField\n                            multiline\n                            rows=\"3\"\n                            name=\"usuario_local_entrega\"\n                            label=\"Estou aguardando:\"\n                            onChange={handleInput}\n                            value={entrega}\n                            margin=\"dense\"\n                            variant=\"filled\"\n                            required\n                            fullWidth\n                        />\n                    ) : (\n                        \"\"\n                    )}\n                </div>\n            ) : (\n                \"\"\n            )}\n\n            {parseInt(vendedor.usuario_status_local) === 1 ? (\n                <div>\n                    <FormLabel component=\"legend\">\n                        <Radio\n                            checked={selectedValue === \"f\"}\n                            onChange={handleChange}\n                            value=\"f\"\n                            name=\"radio-button\"\n                            inputProps={{ \"aria-label\": \"B\" }}\n                            required\n                        />\n                        Retirar:\n                    </FormLabel>\n                    {selectedValue === \"f\" ? (\n                        <TextField\n                            InputProps={{\n                                readOnly: true\n                            }}\n                            multiline\n                            rows=\"3\"\n                            name=\"usuario_local_atend\"\n                            label=\"Local atendimento fixo\"\n                            value={vendedor.usuario_local_atend}\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            // required\n                            fullWidth\n                        />\n                    ) : (\n                        \"\"\n                    )}\n                </div>\n            ) : (\n                \"\"\n            )}\n        </div>\n    );\n};\n\nexport default Entrega;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport BuyBar from \"../components/BuyBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Card,\n    CardContent,\n    Typography,\n    CardActions,\n    Button\n} from \"@material-ui/core\";\n\nimport api from \"../services/api\";\nimport { getUser } from \"../services/auth\";\nimport StyledButton from \"../components/Button\";\nimport AlertDialog from \"../components/AlertDialog\";\nimport Loader from \"../components/Loader\";\nimport Pedido from \"../components/Pedido\";\nimport Entrega from \"../components/Entrega\";\nimport { useSnackbar } from \"notistack\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"10px\",\n        marginBottom: \"80px\"\n    },\n    media: {\n        height: 200\n    },\n    avatar: {\n        // backgroundColor: \"#ff0000\"\n    },\n    root: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n        \"& > *\": {\n            margin: theme.spacing(0.2)\n        }\n    }\n}));\n\nconst convertePedido = ({\n    produto_nome,\n    produto_descricao,\n    produto_valor,\n    pedido_qtde,\n    pedido_id\n}) => {\n    return {\n        pedido_produto_nome: produto_nome,\n        pedido_produto_descricao: produto_descricao,\n        pedido_valor: produto_valor,\n        pedido_qtde,\n        pedido_id\n    };\n};\n\nconst Buy = props => {\n    const classes = useStyles();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const initialState = {\n        usuario_nome: \"\",\n        pedido_data: \"\",\n        pedido_entrega_local: \"\",\n        pedido_id: \"\",\n        pedido_produto_id: \"\",\n        pedido_qtde: \"\",\n        pedido_retirar: \"\",\n        pedido_status: \"\",\n        pedido_status_entrega: \"\",\n        produto_descricao: \"\",\n        produto_id: \"\",\n        produto_nome: \"\",\n        produto_foto: \"\",\n        produto_valor: 0,\n        produto_usuario_id: 0,\n        usuario_status_venda: 0,\n        usuario_status_entrega: 0,\n        usuario_status_local: 0,\n        usuario_local_atend: \"\"\n    };\n\n    const [loading, setLoading] = React.useState(false);\n    const [pedido, setPedido] = React.useState(initialState);\n    const [entrega, setEntrega] = React.useState({\n        pedido_retirar: 0,\n        pedido_entrega_local: \"\"\n    });\n    const [finalizar, setFinalizar] = React.useState(false);\n\n    React.useEffect(() => {\n        setLoading(true);\n        const user = getUser();\n        const id = user ? user.usuario_id : \"\";\n        api.get(`/usuarios/${id}/pedido`)\n            .then(response => {\n                setPedido(response.data);\n                setLoading(false);\n            })\n            .catch(error => {\n                enqueueSnackbar(error.response.data.msg, {\n                    anchorOrigin: {\n                        vertical: \"top\",\n                        horizontal: \"center\"\n                    },\n                    variant: \"error\",\n                    persist: false\n                });\n                props.history.push(\"/history\");\n            });\n    }, [props.history, enqueueSnackbar]);\n\n    const getVendedorConfig = ({\n        usuario_status_venda,\n        usuario_status_entrega,\n        usuario_status_local,\n        usuario_local_atend\n    }) => {\n        return {\n            usuario_status_venda,\n            usuario_status_entrega,\n            usuario_status_local,\n            usuario_local_atend\n        };\n    };\n\n    const handleSubmit = event => {\n        if (event) {\n            event.preventDefault();\n        }\n        setFinalizar(true);\n    };\n\n    const handleDelivery = (selected, value) => {\n        setEntrega({\n            pedido_retirar: selected === \"f\",\n            pedido_entrega_local: value\n        });\n    };\n\n    const cancelarPedido = () => {\n        setLoading(true);\n        api.delete(`/pedidos/${pedido.pedido_id}`).then(response => {\n            enqueueSnackbar(\"Pedido cancelado!\", {\n                anchorOrigin: {\n                    vertical: \"top\",\n                    horizontal: \"center\"\n                },\n                variant: \"success\",\n                persist: false\n            });\n            props.history.push(\"/\");\n        });\n    };\n\n    const finalizarCompra = () => {\n        setLoading(true);\n        api.put(`/pedidos/${pedido.pedido_id}`, {\n            ...entrega\n        })\n            .then(response => {\n                setLoading(false);\n                setFinalizar(false);\n                enqueueSnackbar(\n                    \"Pedido Feito! \" +\n                        (!entrega.pedido_retirar\n                            ? \" Aguarde a entrega!\"\n                            : \"Dirija-se ao local informado!\"),\n                    {\n                        anchorOrigin: {\n                            vertical: \"top\",\n                            horizontal: \"center\"\n                        },\n                        variant: \"success\",\n                        persist: false\n                    }\n                );\n                props.history.push(\"/\");\n            })\n            .catch(error => {\n                setFinalizar(false);\n                setLoading(false);\n                enqueueSnackbar(error.response.data.msg, {\n                    anchorOrigin: {\n                        vertical: \"top\",\n                        horizontal: \"center\"\n                    },\n                    variant: \"error\",\n                    persist: false\n                });\n            });\n    };\n\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <Card className={classes.card}>\n                    <form onSubmit={handleSubmit}>\n                        <CardContent>\n                            <Typography\n                                variant=\"h5\"\n                                align=\"center\"\n                                component=\"h2\"\n                                gutterBottom\n                            >\n                                Finalize sua Compra\n                            </Typography>\n\n                            <Pedido pedido={convertePedido(pedido)} />\n\n                            <Entrega\n                                vendedor={getVendedorConfig(pedido)}\n                                onChange={handleDelivery}\n                            />\n                        </CardContent>\n                        <CardActions>\n                            <StyledButton type=\"submit\" fullWidth>\n                                Finalizar Compra\n                            </StyledButton>\n                        </CardActions>\n                        <CardActions>\n                            <Button\n                                variant=\"outlined\"\n                                size=\"large\"\n                                onClick={cancelarPedido}\n                                fullWidth\n                            >\n                                Cancelar\n                            </Button>\n                        </CardActions>\n                    </form>\n                </Card>\n            </Container>\n            <BuyBar active={1} />\n            <AlertDialog\n                open={finalizar}\n                title=\"Confirmação\"\n                content=\"Deseja finalizar sua compra?\"\n                onAccept={() => finalizarCompra()}\n                onCancel={() => setFinalizar(false)}\n            />\n        </div>\n    );\n};\n\nexport default Buy;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\n\nconst useStyles = makeStyles({\n    stickToBottom: {\n        width: \"100%\",\n        position: \"fixed\",\n        bottom: 0,\n        zIndex: 1000\n    }\n});\n\nconst SellBar = props => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(props.active);\n    return (\n        <BottomNavigation\n            className={classes.stickToBottom}\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n            }}\n            showLabels\n        >\n            <BottomNavigationAction\n                label=\"Home\"\n                icon={<HomeIcon />}\n                component={Link}\n                to=\"/\"\n            />\n            <BottomNavigationAction\n                label=\"Vendas\"\n                icon={<MonetizationOnIcon />}\n                component={Link}\n                to=\"/sells\"\n            />\n\n            <BottomNavigationAction\n                label=\"Produtos\"\n                icon={<AppsIcon />}\n                component={Link}\n                to=\"/products\"\n            />\n\n            <BottomNavigationAction\n                label=\"Configuração\"\n                icon={<SettingsIcon />}\n                component={Link}\n                to=\"/config\"\n            />\n        </BottomNavigation>\n    );\n};\n\nexport default withRouter(SellBar);\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport SellBar from \"../components/SellBar\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport api from \"../services/api\";\nimport { getUser } from \"../services/auth\";\nimport { Link as RLink } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport getImageURL from \"../helpers\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: \"100%\",\n        marginTop: \"10px\",\n        marginBottom: \"80px\",\n        backgroundColor: theme.palette.background.paper\n    },\n    fab: {\n        position: \"fixed\",\n        bottom: 80,\n        right: 20\n    }\n}));\n\nconst productList = products =>\n    products.map(product => (\n        <div key={product.produto_id}>\n            <ListItem\n                button\n                component={RLink}\n                to={`/editProduct/${product.produto_id}`}\n            >\n                <ListItemAvatar>\n                    <Avatar\n                        variant=\"rounded\"\n                        src={getImageURL(product.produto_foto)}\n                    />\n                </ListItemAvatar>\n                <ListItemText\n                    primary={product.produto_nome}\n                    secondary={product.produto_descricao}\n                />\n                <ListItemSecondaryAction>\n                    <IconButton\n                        edge=\"end\"\n                        aria-label=\"edit\"\n                        component={RLink}\n                        to={`/editProduct/${product.produto_id}`}\n                    >\n                        <NavigateNextIcon />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n\n            <Divider />\n        </div>\n    ));\n\nconst ProductList = () => {\n    const [itens, setItens] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    React.useEffect(() => {\n        const user = getUser();\n        const id = user ? user.usuario_id : \"\";\n        setLoading(true);\n        api.get(`/usuarios/${id}/produtos`)\n            .then(response => {\n                setItens(productList(response.data));\n                setLoading(false);\n            })\n            .catch(error => {});\n    }, []);\n    const classes = useStyles();\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\" className={classes.container}>\n                <List className={classes.root}>{itens}</List>\n                <Fab\n                    color=\"secondary\"\n                    aria-label=\"add\"\n                    className={classes.fab}\n                    component={RLink}\n                    to=\"createProduct\"\n                >\n                    <AddIcon />\n                </Fab>\n            </Container>\n            <SellBar active={2} />\n        </div>\n    );\n};\n\nexport default ProductList;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport SellBar from \"../components/SellBar\";\nimport {\n    List,\n    ListItem,\n    ListItemText,\n    ListItemIcon,\n    Divider,\n    Typography,\n    IconButton,\n    ListItemSecondaryAction\n} from \"@material-ui/core\";\n\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Loader from \"../components/Loader\";\nimport api from \"../services/api\";\nimport { Link as RLink } from \"react-router-dom\";\nimport { getUser } from \"../services/auth\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport RoomIcon from \"@material-ui/icons/Room\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: \"100%\",\n        marginTop: \"10px\",\n        marginBottom: \"80px\",\n        backgroundColor: theme.palette.background.paper\n    },\n    disabled: {\n        backgroundColor: \"#eee\"\n    }\n}));\n\nconst sellsMap = (sells, classes) =>\n    sells.map(sell => (\n        <div key={sell.pedido_id}>\n            <ListItem\n                button\n                component={RLink}\n                to={`/sell/${sell.pedido_id}`}\n                className={\n                    parseInt(sell.pedido_status_entrega) === 0\n                        ? \"\"\n                        : classes.disabled\n                }\n            >\n                <ListItemIcon>\n                    {parseInt(sell.pedido_retirar) === 0 ? (\n                        <LocalShippingIcon\n                            color={\n                                parseInt(sell.pedido_status_entrega) === 0\n                                    ? \"secondary\"\n                                    : \"disabled\"\n                            }\n                        />\n                    ) : (\n                        <RoomIcon\n                            color={\n                                parseInt(sell.pedido_status_entrega) === 0\n                                    ? \"primary\"\n                                    : \"disabled\"\n                            }\n                        />\n                    )}\n                </ListItemIcon>\n                <ListItemText\n                    primary={sell.pedido_produto_nome}\n                    secondary={\n                        <React.Fragment>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                className={classes.inline}\n                                color=\"textSecondary\"\n                            >\n                                Quantidade: {sell.pedido_qtde} Valor:{\" \"}\n                                {(\n                                    sell.pedido_qtde * sell.pedido_valor\n                                ).toLocaleString(\"pt-BR\", {\n                                    style: \"currency\",\n                                    currency: \"BRL\"\n                                })}\n                            </Typography>\n                        </React.Fragment>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <IconButton\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        component={RLink}\n                        to={`/sell/${sell.pedido_id}`}\n                    >\n                        <NavigateNextIcon />\n                    </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>\n\n            <Divider />\n        </div>\n    ));\n\nconst Sells = props => {\n    const classes = useStyles();\n\n    const [loading, setLoading] = React.useState(false);\n    const [vendas, setVendas] = React.useState([]);\n    React.useEffect(() => {\n        setLoading(true);\n        const user = getUser();\n        const id = user ? user.usuario_id : \"\";\n        api.get(`/usuarios/${id}/vendas`).then(response => {\n            setVendas(sellsMap(response.data, classes));\n            setLoading(false);\n        });\n    }, [classes]);\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <List className={classes.root}>{vendas}</List>\n            </Container>\n\n            <SellBar active={1} />\n        </div>\n    );\n};\n\nexport default Sells;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport SellBar from \"../components/SellBar\";\nimport Pedido from \"../components/Pedido\";\nimport { useParams } from \"react-router-dom\";\nimport {\n    Card,\n    CardContent,\n    CardHeader,\n    CardActions,\n    Avatar,\n    TextField\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Loader from \"../components/Loader\";\nimport api from \"../services/api\";\n\nimport StyledButton from \"../components/Button\";\nimport getImageURL from \"../helpers\";\nimport AlertDialog from \"../components/AlertDialog\";\nimport { useSnackbar } from \"notistack\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"10px\",\n        marginBottom: \"80px\"\n    },\n    avatar: {\n        width: 60,\n        height: 60\n    }\n}));\n\nconst Sell = props => {\n    const classes = useStyles();\n    const { id } = useParams();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const initialState = {\n        pedido_avaliacao: 0,\n        pedido_data: \"\",\n        pedido_entrega_local: \"\",\n        pedido_id: 0,\n        pedido_produto_descricao: \"\",\n        pedido_produto_id: 0,\n        pedido_produto_nome: \"\",\n        pedido_qtde: 0,\n        pedido_retirar: 0,\n        pedido_status: 0,\n        pedido_status_entrega: 0,\n        pedido_usuario_id: 0,\n        pedido_valor: \"\"\n    };\n\n    const [loading, setLoading] = React.useState(false);\n    const [entregaConfirma, setEntregaConfirma] = React.useState(false);\n    const [venda, setVenda] = React.useState(initialState);\n    const [comprador, setComprador] = React.useState({\n        usuario_email: \"\",\n        usuario_foto: \"\",\n        usuario_nome: \"\"\n    });\n    React.useEffect(() => {\n        setLoading(true);\n        api.get(`/pedidos/${id}`).then(response => {\n            setVenda(response.data);\n            api.get(`/usuarios/${response.data.pedido_usuario_id}`).then(\n                response => {\n                    setComprador(response.data);\n                }\n            );\n            setLoading(false);\n        });\n    }, [id]);\n\n    const entregar = () => {\n        setLoading(true);\n        api.put(`/pedidos/${venda.pedido_id}/entrega`, {\n            pedido_status_entrega: 1\n        }).then(response => {\n            enqueueSnackbar(\"Pedido Entregue!\", {\n                anchorOrigin: {\n                    vertical: \"top\",\n                    horizontal: \"center\"\n                },\n                variant: \"success\",\n                persist: false\n            });\n            props.history.push(\"/sells\");\n        });\n        setEntregaConfirma(false);\n    };\n\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <Card className={classes.card}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                className={classes.avatar}\n                                aria-label=\"recipe\"\n                                src={getImageURL(comprador.usuario_foto)}\n                            />\n                        }\n                        title={comprador.usuario_nome}\n                        subheader={comprador.usuario_email}\n                    />\n                    <CardContent>\n                        <Pedido pedido={venda} />\n\n                        <TextField\n                            InputProps={{\n                                readOnly: true\n                            }}\n                            multiline\n                            rows=\"3\"\n                            name=\"usuario_local_atend\"\n                            label={\n                                parseInt(venda.pedido_retirar) === 0\n                                    ? \"Entregar:\"\n                                    : \"Retirar\"\n                            }\n                            value={venda.pedido_entrega_local}\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            // required\n                            fullWidth\n                        />\n                    </CardContent>\n                    <CardActions>\n                        {parseInt(venda.pedido_status_entrega) === 0 ? (\n                            <StyledButton\n                                size=\"small\"\n                                onClick={() => setEntregaConfirma(true)}\n                                fullWidth\n                            >\n                                Entregue\n                            </StyledButton>\n                        ) : (\n                            \"\"\n                        )}\n                    </CardActions>\n                </Card>\n            </Container>\n\n            <SellBar active={1} />\n\n            <AlertDialog\n                open={entregaConfirma}\n                title=\"Confirmar entrega\"\n                content=\"Deseja realmente confirmar a entrega?\"\n                onAccept={() => entregar()}\n                onCancel={() => setEntregaConfirma(false)}\n            />\n        </div>\n    );\n};\n\nexport default Sell;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100%;\n    height: 200px;\n    /* background-color: #fafafa; */\n    /* border: 2px solid #eeeeee; */\n    margin-bottom: 10px;\n    object-fit: cover;\n    overflow: hidden;\n\n    img {\n        width: 100%;\n        object-fit: cover;\n    }\n`;\n\nconst Preview = props => {\n    return (\n        <div>\n            {props.show ? (\n                <Container>\n                    <img src={props.src} alt=\"loaded\" />\n                </Container>\n            ) : (\n                \"\"\n            )}\n        </div>\n    );\n};\n\nexport default Preview;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport SellBar from \"../components/SellBar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport useForm from \"../hooks/formHooks\";\nimport StyledButton from \"../components/Button\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Uploader from \"../components/Uploader\";\nimport Loader from \"../components/Loader\";\nimport api from \"../services/api\";\nimport { FormGroup, FormControlLabel, Switch } from \"@material-ui/core\";\nimport getImageURL from \"../helpers\";\n\nimport { useParams } from \"react-router-dom\";\nimport Preview from \"../components/Preview\";\n\nconst useStyles = makeStyles({\n    card: {\n        marginTop: \"10px\",\n        marginBottom: \"80px\"\n    }\n});\n\nconst initialData = {\n    produto_nome: \"\",\n    produto_descricao: \"\",\n    produto_qtde: \"\",\n    produto_valor: \"\",\n    produto_foto: \"\",\n    produto_status: 0\n};\n\nconst CreateProduct = props => {\n    let { id } = useParams();\n\n    React.useEffect(() => {\n        if (id) {\n            setLoading(true);\n            api.get(`/produtos/${id}`)\n                .then(response => {\n                    setInputs(response.data);\n                    setPreview(getImageURL(response.data.produto_foto));\n                    setShow(true);\n                    setLoading(false);\n                })\n                .catch(error => {});\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    //if user click in product icon bar reset form\n    React.useEffect(() => {\n        setInputs(initialData);\n        setShow(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [id]);\n\n    const [loading, setLoading] = React.useState(false);\n    const [preview, setPreview] = React.useState(\"\");\n    const [selectedFile, setSelectedFile] = React.useState();\n    const [show, setShow] = React.useState(false);\n    const classes = useStyles();\n    const productHandle = async inputs => {\n        try {\n            if (!id) {\n                await api.post(\"/produtos\", {\n                    ...inputs\n                });\n            } else {\n                await api.put(`/produtos/${id}`, {\n                    ...inputs\n                });\n            }\n            props.history.push(\"/sell\");\n        } catch (error) {\n            if (error.response) {\n                setErrors(error.response.data.msg);\n            } else if (error.request) {\n                setErrors(\"Erro ao conectar o servidor\");\n            } else {\n                setErrors(error);\n            }\n        }\n    };\n    const uploadHandle = file => {\n        setSelectedFile(file[0]);\n        let formData = new FormData();\n        formData.append(\"image\", file[0]);\n        setLoading(true);\n        api.post(\"/upload\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        })\n            .then(response => {\n                setLoading(false);\n                setInputs(inputs => ({\n                    ...inputs,\n                    produto_foto: response.data.uploaded_file\n                }));\n            })\n            .catch(function() {\n                console.log(\"FAILURE!!\");\n            });\n    };\n\n    React.useEffect(() => {\n        if (!selectedFile) {\n            setPreview(\"\");\n            return;\n        }\n\n        const objectUrl = URL.createObjectURL(selectedFile);\n        setPreview(objectUrl);\n        setShow(true);\n\n        return () => URL.revokeObjectURL(objectUrl);\n    }, [selectedFile]);\n\n    const {\n        inputs,\n        setInputs,\n        handleInputChange,\n        handleSubmit,\n        setErrors\n    } = useForm(productHandle, initialData);\n\n    const handleStatusChange = event => {\n        setInputs(inputs => ({\n            ...inputs,\n            produto_status: event.target.checked ? 1 : 0\n        }));\n    };\n\n    return (\n        <div>\n            <Loader show={loading} />\n\n            <Container maxWidth=\"sm\">\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Preview src={preview} show={show ? true : false} />\n                        {/* <Button size=\"small\" startIcon={<ArrowBackIosIcon />} /> */}\n\n                        <form onSubmit={handleSubmit}>\n                            <Uploader onDrop={uploadHandle} />\n                            <input\n                                name=\"produto_foto\"\n                                onChange={handleInputChange}\n                                value={inputs.produto_foto}\n                                style={{ display: \"none\" }}\n                            />\n\n                            <div>\n                                <TextField\n                                    type=\"text\"\n                                    name=\"produto_nome\"\n                                    label=\"Nome Produto\"\n                                    onChange={handleInputChange}\n                                    value={inputs.produto_nome}\n                                    margin=\"dense\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    multiline\n                                    rows=\"3\"\n                                    name=\"produto_descricao\"\n                                    label=\"Descrição Produto\"\n                                    onChange={handleInputChange}\n                                    value={inputs.produto_descricao}\n                                    margin=\"dense\"\n                                    variant=\"filled\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n\n                            <FormControl\n                                fullWidth\n                                margin=\"dense\"\n                                variant=\"filled\"\n                            >\n                                <InputLabel htmlFor=\"filled-adornment-amount\">\n                                    Valor\n                                </InputLabel>\n                                <FilledInput\n                                    id=\"filled-adornment-amount\"\n                                    name=\"produto_valor\"\n                                    value={inputs.produto_valor}\n                                    onChange={handleInputChange}\n                                    type=\"number\"\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            R$\n                                        </InputAdornment>\n                                    }\n                                />\n                            </FormControl>\n                            <div>\n                                <TextField\n                                    type=\"number\"\n                                    name=\"produto_qtde\"\n                                    onChange={handleInputChange}\n                                    value={inputs.produto_qtde}\n                                    fullWidth\n                                    label=\"Quantidade\"\n                                    margin=\"dense\"\n                                    variant=\"filled\"\n                                    required\n                                />\n                            </div>\n                            <div style={{ display: id ? \"block\" : \"none\" }}>\n                                <FormGroup>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    parseInt(\n                                                        inputs.produto_status\n                                                    ) === 1\n                                                        ? true\n                                                        : false\n                                                }\n                                                onChange={handleStatusChange}\n                                                value=\"checked\"\n                                            />\n                                        }\n                                        label={\n                                            parseInt(inputs.produto_status) ===\n                                            1\n                                                ? \"Ativo\"\n                                                : \"Inativo\"\n                                        }\n                                    />\n                                </FormGroup>\n                            </div>\n                            <StyledButton type=\"submit\" fullWidth>\n                                {!id ? \"Cadastrar\" : \"Salvar\"}\n                            </StyledButton>\n                        </form>\n                    </CardContent>\n                </Card>\n            </Container>\n            <SellBar active={2} />\n        </div>\n    );\n};\n\nexport default CreateProduct;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport SellBar from \"../components/SellBar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getUser } from \"../services/auth\";\nimport api from \"../services/api\";\nimport Loader from \"../components/Loader\";\n\nimport StyledButton from \"../components/Button\";\nimport {\n    FormGroup,\n    FormControlLabel,\n    Switch,\n    FormLabel\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    card: {\n        marginTop: \"10px\"\n    }\n});\n\nconst Config = props => {\n    const classes = useStyles();\n\n    const [loading, setLoading] = React.useState(false);\n\n    const user = getUser();\n    const id = user ? user.usuario_id : \"\";\n\n    const [inputs, setInputs] = React.useState({\n        usuario_status_venda: 0,\n        usuario_status_entrega: 0,\n        usuario_status_local: 0,\n        usuario_local_atend: \"\"\n    });\n\n    React.useEffect(() => {\n        setLoading(true);\n        api.get(`/usuarios/${id}/config`).then(response => {\n            setInputs(response.data);\n            setLoading(false);\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleStatusChange = name => event => {\n        setInputs({ ...inputs, [name]: event.target.checked ? 1 : 0 });\n    };\n\n    const handleChange = event => {\n        setInputs({ ...inputs, [event.target.name]: event.target.value });\n    };\n\n    const handleSubmit = event => {\n        if (event) {\n            event.preventDefault();\n        }\n\n        setLoading(true);\n        api.put(`/usuarios/${id}/config`, inputs)\n            .then(() => {\n                setLoading(false);\n                props.history.push(\"/sell\");\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <Card className={classes.card}>\n                    <CardContent>\n                        <form onSubmit={handleSubmit}>\n                            <FormGroup>\n                                <FormLabel component=\"legend\">\n                                    Online para vendas\n                                </FormLabel>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                parseInt(\n                                                    inputs.usuario_status_venda\n                                                ) === 1\n                                                    ? true\n                                                    : false\n                                            }\n                                            onChange={handleStatusChange(\n                                                \"usuario_status_venda\"\n                                            )}\n                                            value=\"checked\"\n                                        />\n                                    }\n                                    label={\n                                        parseInt(\n                                            inputs.usuario_status_venda\n                                        ) === 1\n                                            ? \"On\"\n                                            : \"Off\"\n                                    }\n                                />\n                            </FormGroup>\n                            <br />\n                            <FormGroup>\n                                <FormLabel component=\"legend\">\n                                    Realizar entrega\n                                </FormLabel>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                parseInt(\n                                                    inputs.usuario_status_entrega\n                                                ) === 1\n                                                    ? true\n                                                    : false\n                                            }\n                                            onChange={handleStatusChange(\n                                                \"usuario_status_entrega\"\n                                            )}\n                                            value=\"checked\"\n                                        />\n                                    }\n                                    label={\n                                        parseInt(\n                                            inputs.usuario_status_entrega\n                                        ) === 1\n                                            ? \"On\"\n                                            : \"Off\"\n                                    }\n                                />\n                            </FormGroup>\n                            <br />\n                            <div>\n                                <FormGroup>\n                                    <FormLabel component=\"legend\">\n                                        Vender em local fixo\n                                    </FormLabel>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={\n                                                    parseInt(\n                                                        inputs.usuario_status_local\n                                                    ) === 1\n                                                        ? true\n                                                        : false\n                                                }\n                                                onChange={handleStatusChange(\n                                                    \"usuario_status_local\"\n                                                )}\n                                                value=\"checked1\"\n                                            />\n                                        }\n                                        label={\n                                            parseInt(\n                                                inputs.usuario_status_local\n                                            ) === 1\n                                                ? \"On\"\n                                                : \"Off\"\n                                        }\n                                    />\n                                </FormGroup>\n                            </div>\n\n                            <div>\n                                <TextField\n                                    disabled={\n                                        parseInt(\n                                            inputs.usuario_status_local\n                                        ) === 1\n                                            ? false\n                                            : true\n                                    }\n                                    multiline\n                                    rows=\"3\"\n                                    name=\"usuario_local_atend\"\n                                    label=\"Local atendimento fixo\"\n                                    onChange={handleChange}\n                                    value={inputs.usuario_local_atend}\n                                    margin=\"dense\"\n                                    variant=\"filled\"\n                                    required\n                                    fullWidth\n                                />\n                            </div>\n\n                            <StyledButton type=\"submit\" fullWidth>\n                                Salvar\n                            </StyledButton>\n                        </form>\n                    </CardContent>\n                </Card>\n            </Container>\n            <SellBar active={3} />\n        </div>\n    );\n};\n\nexport default Config;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Link as RLink } from \"react-router-dom\";\nimport { isAuthenticated } from \"../services/auth\";\n\nconst Confirm = props => {\n    if (!isAuthenticated()) {\n        props.history.push(\"/login\");\n    }\n    return (\n        <div>\n            <Dialog\n                open={true}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"Confirmação de E-Mail\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Enviamos um e-mail para sua caixa de entrada! Por favor\n                        confirme para poder utilizar o sistema.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        component={RLink}\n                        to={`/logout`}\n                        color=\"primary\"\n                        autoFocus\n                    >\n                        Sair\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default Confirm;\n","import React from \"react\";\nimport useForm from \"../hooks/formHooks\";\nimport api from \"../services/api\";\nimport { isAuthenticated } from \"../services/auth\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport StyledButton from \"../components/Button\";\nimport { ErrorShow } from \"../components\";\nimport { useParams } from \"react-router-dom\";\nimport { Card, CardContent, Container } from \"@material-ui/core\";\nimport Loader from \"../components/Loader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"10px\"\n    },\n    img: {\n        display: \"block\",\n        width: \"50%\",\n        margin: \"20px auto\"\n    },\n    button: {\n        marginBottom: \"8px\"\n    }\n}));\n\nconst Password = props => {\n    if (isAuthenticated()) {\n        props.history.push(\"/\");\n    }\n    const classes = useStyles();\n    const { hash } = useParams();\n    const loginHandle = inputs => {\n        setErrors(\"\");\n        setLoading(true);\n        const { password } = inputs;\n        api.put(`/recuperar/${hash}`, {\n            password: password\n        })\n            .then(response => {\n                setLoading(false);\n                props.history.push(\"/\");\n            })\n            .catch(error => {\n                setLoading(false);\n                if (error.response) {\n                    setErrors(error.response.data.msg);\n                } else if (error.request) {\n                    setErrors(\"Erro na conexão ao servidor\");\n                } else {\n                    setErrors(error);\n                }\n            });\n    };\n\n    const [loading, setLoading] = React.useState(false);\n\n    const initialState = { password: \"\", password_repeat: \"\" };\n    const {\n        inputs,\n        handleInputChange,\n        handleSubmit,\n        errors,\n        setErrors\n    } = useForm(loginHandle, initialState);\n\n    const [values, setValues] = React.useState({\n        showPassword: false\n    });\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = event => {\n        event.preventDefault();\n    };\n\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <Card className={classes.card}>\n                    <CardContent>\n                        <form onSubmit={handleSubmit}>\n                            {errors && <ErrorShow>{errors}</ErrorShow>}\n\n                            <div>\n                                <FormControl\n                                    variant=\"filled\"\n                                    fullWidth\n                                    required\n                                >\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\n                                        Senha\n                                    </InputLabel>\n                                    <FilledInput\n                                        id=\"filled-adornment-password\"\n                                        name=\"password\"\n                                        type={\n                                            values.showPassword\n                                                ? \"text\"\n                                                : \"password\"\n                                        }\n                                        value={inputs.password}\n                                        onChange={handleInputChange}\n                                        fullWidth\n                                        margin=\"normal\"\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={\n                                                        handleClickShowPassword\n                                                    }\n                                                    onMouseDown={\n                                                        handleMouseDownPassword\n                                                    }\n                                                >\n                                                    {values.showPassword ? (\n                                                        <Visibility />\n                                                    ) : (\n                                                        <VisibilityOff />\n                                                    )}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n                            </div>\n                            <div>\n                                <FormControl\n                                    variant=\"filled\"\n                                    fullWidth\n                                    required\n                                    margin=\"dense\"\n                                >\n                                    <InputLabel htmlFor=\"filled-adornment-password-repeat\">\n                                        Repita a Senha\n                                    </InputLabel>\n                                    <FilledInput\n                                        id=\"filled-adornment-password-repeat\"\n                                        name=\"password_repeat\"\n                                        type={\n                                            values.showPassword\n                                                ? \"text\"\n                                                : \"password\"\n                                        }\n                                        value={inputs.password_repeat}\n                                        onChange={handleInputChange}\n                                        fullWidth\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={\n                                                        handleClickShowPassword\n                                                    }\n                                                    onMouseDown={\n                                                        handleMouseDownPassword\n                                                    }\n                                                >\n                                                    {values.showPassword ? (\n                                                        <Visibility />\n                                                    ) : (\n                                                        <VisibilityOff />\n                                                    )}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n                            </div>\n                            <div>\n                                <StyledButton\n                                    type=\"submit\"\n                                    size=\"large\"\n                                    color=\"primary\"\n                                    fullWidth\n                                >\n                                    Alterar\n                                </StyledButton>\n                            </div>\n                        </form>\n                    </CardContent>\n                </Card>\n            </Container>\n        </div>\n    );\n};\n\nexport default Password;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Link as RLink } from \"react-router-dom\";\nimport api from \"../services/api\";\nimport { useParams } from \"react-router-dom\";\n\nconst ConfirmEmail = props => {\n    let { hash } = useParams();\n    React.useEffect(() => {\n        api.put(`/confirmar/${hash}`)\n            .then(response => {\n                //\n            })\n            .catch(error => {\n                //\n            });\n    }, [hash]);\n    return (\n        <div>\n            <Dialog\n                open={true}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"Confirmação de E-Mail\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Obrigado por confirmar seu E-mail!\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        component={RLink}\n                        to={`/logout`}\n                        color=\"primary\"\n                        autoFocus\n                    >\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default ConfirmEmail;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, TextField, Grid } from \"@material-ui/core\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles(theme => ({\n    margin: {\n        margin: theme.spacing(1)\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst Quantity = ({ onChange }) => {\n    const classes = useStyles();\n    const [quantity, setQuantity] = React.useState(1);\n    const incQuantity = () => {\n        setQuantity(quantity + 1);\n        onChange(quantity + 1);\n    };\n    const decQuantity = () => {\n        if (quantity > 1) {\n            setQuantity(quantity - 1);\n            onChange(quantity - 1);\n        }\n    };\n\n    return (\n        <div>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={2}>\n                    <IconButton\n                        color=\"secondary\"\n                        aria-label=\"sub\"\n                        onClick={decQuantity}\n                    >\n                        <RemoveIcon />\n                    </IconButton>\n                </Grid>\n                <Grid item xs={8}>\n                    <TextField\n                        id=\"outlined-read-only-input\"\n                        label=\"Quantidade\"\n                        size=\"small\"\n                        value={quantity}\n                        className={classes.textField}\n                        margin=\"dense\"\n                        InputProps={{\n                            readOnly: true\n                        }}\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={2}>\n                    <IconButton\n                        color=\"secondary\"\n                        aria-label=\"add\"\n                        onClick={incQuantity}\n                    >\n                        <AddIcon />\n                    </IconButton>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default Quantity;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport AppBar from \"../components/AppBar\";\nimport Loader from \"../components/Loader\";\nimport StyledButton from \"../components/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport {\n    Card,\n    CardContent,\n    CardMedia,\n    Typography,\n    CardActions,\n    CardHeader,\n    Avatar,\n    Chip\n} from \"@material-ui/core\";\nimport AlertDialog from \"../components/AlertDialog\";\nimport Quantity from \"../components/Quantity\";\n\nimport { Rating } from \"@material-ui/lab\";\n\nimport getImageURL from \"../helpers\";\nimport api from \"../services/api\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"10px\",\n        marginBottom: \"80px\"\n    },\n    media: {\n        height: 200\n    },\n    avatar: {\n        width: 60,\n        height: 60\n    },\n    root: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n        \"& > *\": {\n            margin: theme.spacing(0.2)\n        }\n    }\n}));\n\nconst Product = props => {\n    const classes = useStyles();\n    const { id } = useParams();\n    const initialState = {\n        produto_nome: \"\",\n        produto_descricao: \"\",\n        produto_foto: \"\",\n        produto_valor: 0\n    };\n    const [loading, setLoading] = React.useState(false);\n    const [product, setProduct] = React.useState(initialState);\n    const [vendedor, setVendedor] = React.useState({\n        usuario_email: \"\",\n        usuario_foto: \"\",\n        usuario_nome: \"\"\n    });\n    const [entrega, setEntrega] = React.useState({\n        usuario_status_entrega: 0,\n        usuario_status_local: 0\n    });\n\n    const [quantidade, setQuantidade] = React.useState(1);\n\n    const [comprarConfirma, setComprarConfirma] = React.useState(false);\n\n    const handleQtde = value => {\n        setQuantidade(value);\n    };\n\n    React.useEffect(() => {\n        setLoading(true);\n        api.get(`/produtos/${id}`).then(response => {\n            setProduct(response.data);\n            api.get(`/usuarios/${response.data.produto_usuario_id}`).then(\n                res => {\n                    setVendedor(res.data);\n                    api.get(\n                        `/usuarios/${response.data.produto_usuario_id}/config`\n                    ).then(response => {\n                        setEntrega(response.data);\n                        setLoading(false);\n                    });\n                }\n            );\n        });\n    }, [id]);\n\n    const showChip = params => {\n        const value = parseInt(params) === 1 ? true : false;\n        return {\n            color: value ? \"secondary\" : \"default\",\n            disabled: !value\n        };\n    };\n\n    const showDialog = () => {\n        setComprarConfirma(true);\n    };\n\n    const comprar = () => {\n        setLoading(true);\n        api.post(\"/pedidos\", {\n            pedido_produto_id: product.produto_id,\n            pedido_vendedor_id: product.produto_usuario_id,\n            pedido_qtde: quantidade,\n            pedido_retirar: false,\n            pedido_entrega_local: false\n        })\n            .then(response => {\n                setLoading(false);\n                props.history.push(\"/buy\");\n            })\n            .catch(error => {});\n    };\n\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <Card className={classes.card}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"recipe\"\n                                src={getImageURL(vendedor.usuario_foto)}\n                                className={classes.avatar}\n                            />\n                        }\n                        title={vendedor.usuario_nome}\n                        subheader={vendedor.usuario_email}\n                    />\n                    <CardMedia\n                        className={classes.media}\n                        image={getImageURL(product.produto_foto)}\n                        title={product.produto_nome}\n                    />\n                    <CardContent>\n                        <div className={classes.root}>\n                            <div className={classes.root}>\n                                <Chip\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label=\"Entrega\"\n                                    icon={<LocalShippingIcon />}\n                                    {...showChip(\n                                        entrega.usuario_status_entrega\n                                    )}\n                                ></Chip>\n                                <Chip\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    size=\"small\"\n                                    label=\"Local Fixo\"\n                                    icon={<RoomIcon />}\n                                    {...showChip(entrega.usuario_status_local)}\n                                ></Chip>\n                            </div>\n                            <div>\n                                <Rating\n                                    size=\"small\"\n                                    name=\"half-rating\"\n                                    precision={0.5}\n                                    value={product.avaliacao}\n                                    readOnly\n                                />\n                            </div>\n                        </div>\n                        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                            {product.produto_nome}\n                        </Typography>\n\n                        <Typography variant=\"body2\" component=\"p\">\n                            {product.produto_descricao}\n                        </Typography>\n                        <Typography variant=\"h4\" component=\"h1\" align=\"right\">\n                            {product.produto_valor.toLocaleString(\"pt-BR\", {\n                                style: \"currency\",\n                                currency: \"BRL\"\n                            })}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Quantity onChange={handleQtde} />\n                    </CardActions>\n                    <CardActions>\n                        <StyledButton\n                            size=\"small\"\n                            onClick={showDialog}\n                            fullWidth\n                        >\n                            Comprar\n                        </StyledButton>\n                    </CardActions>\n                </Card>\n            </Container>\n            <AppBar active={0} />\n            <AlertDialog\n                open={comprarConfirma}\n                title=\"Confirmação\"\n                content=\"Deseja prosseguir com sua compra?\"\n                onAccept={() => comprar()}\n                onCancel={() => setComprarConfirma(false)}\n            />\n        </div>\n    );\n};\n\nexport default Product;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport BuyBar from \"../components/BuyBar\";\nimport {\n    List,\n    ListItem,\n    ListItemText,\n    ListItemIcon,\n    Divider,\n    Typography,\n    IconButton,\n    ListItemSecondaryAction\n} from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Loader from \"../components/Loader\";\nimport api from \"../services/api\";\nimport { Link as RLink } from \"react-router-dom\";\nimport { getUser } from \"../services/auth\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport RoomIcon from \"@material-ui/icons/Room\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: \"100%\",\n        marginTop: \"10px\",\n        marginBottom: \"80px\",\n        backgroundColor: theme.palette.background.paper\n    },\n    disabled: {\n        backgroundColor: \"#eee\"\n    }\n}));\n\nconst History = props => {\n    const classes = useStyles();\n\n    const [loading, setLoading] = React.useState(false);\n    const [compras, setCompras] = React.useState([]);\n    React.useEffect(() => {\n        setLoading(true);\n        const user = getUser();\n        const id = user ? user.usuario_id : \"\";\n        api.get(`/usuarios/${id}/compras`).then(response => {\n            setCompras(response.data);\n            setLoading(false);\n        });\n    }, []);\n\n    const updateRating = (id, index) => (event, newValue) => {\n        setLoading(true);\n\n        api.put(`/pedidos/${id}/avaliar`, {\n            pedido_avaliacao: newValue\n        }).then(response => {\n            setLoading(false);\n            const _compras = [...compras];\n            _compras[index] = {\n                ..._compras[index],\n                pedido_avaliacao: newValue\n            };\n            setCompras(_compras);\n        });\n    };\n\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <List className={classes.root}>\n                    {compras.map((sell, index) => (\n                        <div key={sell.pedido_id}>\n                            <ListItem\n                                className={\n                                    parseInt(sell.pedido_status_entrega) === 0\n                                        ? \"\"\n                                        : classes.disabled\n                                }\n                            >\n                                <ListItemIcon>\n                                    {parseInt(sell.pedido_retirar) === 0 ? (\n                                        <LocalShippingIcon\n                                            color={\n                                                parseInt(\n                                                    sell.pedido_status_entrega\n                                                ) === 0\n                                                    ? \"secondary\"\n                                                    : \"disabled\"\n                                            }\n                                        />\n                                    ) : (\n                                        <RoomIcon\n                                            color={\n                                                parseInt(\n                                                    sell.pedido_status_entrega\n                                                ) === 0\n                                                    ? \"primary\"\n                                                    : \"disabled\"\n                                            }\n                                        />\n                                    )}\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={sell.pedido_produto_nome}\n                                    secondary={\n                                        <React.Fragment>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"body2\"\n                                                className={classes.inline}\n                                                color=\"textSecondary\"\n                                            >\n                                                Quantidade: {sell.pedido_qtde}{\" \"}\n                                                Valor:{\" \"}\n                                                {(\n                                                    sell.pedido_qtde *\n                                                    sell.pedido_valor\n                                                ).toLocaleString(\"pt-BR\", {\n                                                    style: \"currency\",\n                                                    currency: \"BRL\"\n                                                })}\n                                            </Typography>\n                                            <br />\n                                            {parseInt(\n                                                sell.pedido_status_entrega\n                                            ) === 1 ? (\n                                                <Rating\n                                                    name={`avaliacao-${sell.pedido_id}`}\n                                                    readOnly={\n                                                        sell.pedido_avaliacao ===\n                                                        null\n                                                            ? false\n                                                            : true\n                                                    }\n                                                    value={\n                                                        sell.pedido_avaliacao\n                                                    }\n                                                    onChange={updateRating(\n                                                        sell.pedido_id,\n                                                        index\n                                                    )}\n                                                />\n                                            ) : (\n                                                \"\"\n                                            )}\n                                        </React.Fragment>\n                                    }\n                                />\n                                <ListItemSecondaryAction>\n                                    <IconButton\n                                        edge=\"end\"\n                                        aria-label=\"delete\"\n                                        component={RLink}\n                                        to={`/purchase/${sell.pedido_id}`}\n                                    >\n                                        <NavigateNextIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n\n                            <Divider />\n                        </div>\n                    ))}\n                </List>\n            </Container>\n\n            <BuyBar active={2} />\n        </div>\n    );\n};\n\nexport default History;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport BuyBar from \"../components/BuyBar\";\nimport Pedido from \"../components/Pedido\";\nimport { useParams } from \"react-router-dom\";\nimport {\n    Card,\n    CardContent,\n    CardHeader,\n    CardActions,\n    Avatar,\n    TextField\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Loader from \"../components/Loader\";\nimport api from \"../services/api\";\nimport getImageURL from \"../helpers\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"10px\",\n        marginBottom: \"80px\"\n    },\n    avatar: {\n        width: 60,\n        height: 60\n    }\n}));\n\nconst Purchase = props => {\n    const classes = useStyles();\n    const { id } = useParams();\n\n    const initialState = {\n        pedido_avaliacao: 0,\n        pedido_data: \"\",\n        pedido_entrega_local: \"\",\n        pedido_id: 0,\n        pedido_produto_descricao: \"\",\n        pedido_produto_id: 0,\n        pedido_produto_nome: \"\",\n        pedido_qtde: 0,\n        pedido_retirar: 0,\n        pedido_status: 0,\n        pedido_status_entrega: 0,\n        pedido_usuario_id: 0,\n        pedido_valor: \"\"\n    };\n\n    const [loading, setLoading] = React.useState(false);\n\n    const [venda, setVenda] = React.useState(initialState);\n    const [vendedor, setVendedor] = React.useState({\n        usuario_email: \"\",\n        usuario_foto: \"\",\n        usuario_nome: \"\"\n    });\n    React.useEffect(() => {\n        setLoading(true);\n        api.get(`/pedidos/${id}`).then(response => {\n            setVenda(response.data);\n            api.get(`/usuarios/${response.data.pedido_vendedor_id}`).then(\n                response => {\n                    setVendedor(response.data);\n                }\n            );\n            setLoading(false);\n        });\n    }, [id]);\n\n    return (\n        <div>\n            <Loader show={loading} />\n            <Container maxWidth=\"sm\">\n                <Card className={classes.card}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                className={classes.avatar}\n                                aria-label=\"recipe\"\n                                src={getImageURL(vendedor.usuario_foto)}\n                            />\n                        }\n                        title={vendedor.usuario_nome}\n                        subheader={vendedor.usuario_email}\n                    />\n                    <CardContent>\n                        <Pedido pedido={venda} />\n\n                        <TextField\n                            InputProps={{\n                                readOnly: true\n                            }}\n                            multiline\n                            rows=\"3\"\n                            name=\"usuario_local_atend\"\n                            label={\n                                parseInt(venda.pedido_retirar) === 0\n                                    ? \"Entregar:\"\n                                    : \"Retirar\"\n                            }\n                            value={venda.pedido_entrega_local}\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            // required\n                            fullWidth\n                        />\n                    </CardContent>\n                    <CardActions></CardActions>\n                </Card>\n            </Container>\n\n            <BuyBar active={2} />\n        </div>\n    );\n};\n\nexport default Purchase;\n","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Route,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\n\nimport Login from \"./views/login\";\nimport Logout from \"./views/logout\";\nimport Recovery from \"./views/recovery\";\nimport Register from \"./views/register\";\nimport Home from \"./views/home\";\nimport Profile from \"./views/profile\";\nimport EditProfile from \"./views/editProfile\";\nimport Buy from \"./views/buy\";\nimport ProductList from \"./views/productList\";\nimport Sells from \"./views/sells\";\nimport Sell from \"./views/sell\";\nimport CreateProduct from \"./views/createProduct\";\nimport Config from \"./views/config\";\nimport Confirm from \"./views/confirm\";\nimport Password from \"./views/password\";\nimport ConfirmEmail from \"./views/confirmEmail\";\nimport Product from \"./views/product\";\nimport History from \"./views/history\";\n\nimport { isAuthenticated, isActivate } from \"./services/auth\";\nimport Purchase from \"./views/purchase\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                isActivate() ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/confirm\",\n                            state: { from: props.location }\n                        }}\n                    />\n                )\n            ) : (\n                <Redirect\n                    to={{ pathname: \"/login\", state: { from: props.location } }}\n                />\n            )\n        }\n    />\n);\n\nconst Routes = () => (\n    <Router>\n        <Switch>\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/register/\" component={Register} />\n            <Route path=\"/recovery/\" component={Recovery} />\n            <Route path=\"/changepassword/:hash\" component={Password} />\n            <Route path=\"/confirm\" component={Confirm} />\n            <Route path=\"/confirmEmail/:hash\" component={ConfirmEmail} />\n            <PrivateRoute path=\"/profile\" component={Profile} />\n            <PrivateRoute path=\"/editProfile\" component={EditProfile} />\n            <PrivateRoute path=\"/buy\" component={Buy} />\n            <PrivateRoute path=\"/sells\" component={Sells} />\n            <PrivateRoute path=\"/sell/:id\" component={Sell} />\n            <PrivateRoute path=\"/purchase/:id\" component={Purchase} />\n            <PrivateRoute path=\"/products\" component={ProductList} />\n            <PrivateRoute path=\"/product/:id\" component={Product} />\n            <PrivateRoute path=\"/editProduct/:id\" component={CreateProduct} />\n            <PrivateRoute path=\"/createProduct\" component={CreateProduct} />\n            <PrivateRoute path=\"/config\" component={Config} />\n            <PrivateRoute path=\"/history\" component={History} />\n            <PrivateRoute path=\"/\" component={Home} />\n\n            <Route path=\"*\" component={() => <Redirect to=\"/\" />} />\n        </Switch>\n    </Router>\n);\n\nexport default Routes;\n","// global.js\nimport { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\nhtml, body {\n    margin: 0;\n    padding: 0;\n}\n\na {\n    text-decoration: none;\n}\n\n\n*, *::after, *::before {\n    box-sizing: border-box;\n}\n\n\nbody {\n\n    \n    background: ${({ theme }) => theme.background};\n    color: ${({ theme }) => theme.primaryLight};\n    height: 100vh;\n    \n    background: hsl(220, 20%, 95%);\n    /* background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='260' height='260' viewBox='0 0 260 260'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ac2567' fill-opacity='0.16'%3E%3Cpath d='M24.37 16c.2.65.39 1.32.54 2H21.17l1.17 2.34.45.9-.24.11V28a5 5 0 0 1-2.23 8.94l-.02.06a8 8 0 0 1-7.75 6h-20a8 8 0 0 1-7.74-6l-.02-.06A5 5 0 0 1-17.45 28v-6.76l-.79-1.58-.44-.9.9-.44.63-.32H-20a23.01 23.01 0 0 1 44.37-2zm-36.82 2a1 1 0 0 0-.44.1l-3.1 1.56.89 1.79 1.31-.66a3 3 0 0 1 2.69 0l2.2 1.1a1 1 0 0 0 .9 0l2.21-1.1a3 3 0 0 1 2.69 0l2.2 1.1a1 1 0 0 0 .9 0l2.21-1.1a3 3 0 0 1 2.69 0l2.2 1.1a1 1 0 0 0 .86.02l2.88-1.27a3 3 0 0 1 2.43 0l2.88 1.27a1 1 0 0 0 .85-.02l3.1-1.55-.89-1.79-1.42.71a3 3 0 0 1-2.56.06l-2.77-1.23a1 1 0 0 0-.4-.09h-.01a1 1 0 0 0-.4.09l-2.78 1.23a3 3 0 0 1-2.56-.06l-2.3-1.15a1 1 0 0 0-.45-.11h-.01a1 1 0 0 0-.44.1L.9 19.22a3 3 0 0 1-2.69 0l-2.2-1.1a1 1 0 0 0-.45-.11h-.01a1 1 0 0 0-.44.1l-2.21 1.11a3 3 0 0 1-2.69 0l-2.2-1.1a1 1 0 0 0-.45-.11h-.01zm0-2h-4.9a21.01 21.01 0 0 1 39.61 0h-2.09l-.06-.13-.26.13h-32.31zm30.35 7.68l1.36-.68h1.3v2h-36v-1.15l.34-.17 1.36-.68h2.59l1.36.68a3 3 0 0 0 2.69 0l1.36-.68h2.59l1.36.68a3 3 0 0 0 2.69 0L2.26 23h2.59l1.36.68a3 3 0 0 0 2.56.06l1.67-.74h3.23l1.67.74a3 3 0 0 0 2.56-.06zM-13.82 27l16.37 4.91L18.93 27h-32.75zm-.63 2h.34l16.66 5 16.67-5h.33a3 3 0 1 1 0 6h-34a3 3 0 1 1 0-6zm1.35 8a6 6 0 0 0 5.65 4h20a6 6 0 0 0 5.66-4H-13.1z'/%3E%3Cpath id='path6_fill-copy' d='M284.37 16c.2.65.39 1.32.54 2H281.17l1.17 2.34.45.9-.24.11V28a5 5 0 0 1-2.23 8.94l-.02.06a8 8 0 0 1-7.75 6h-20a8 8 0 0 1-7.74-6l-.02-.06a5 5 0 0 1-2.24-8.94v-6.76l-.79-1.58-.44-.9.9-.44.63-.32H240a23.01 23.01 0 0 1 44.37-2zm-36.82 2a1 1 0 0 0-.44.1l-3.1 1.56.89 1.79 1.31-.66a3 3 0 0 1 2.69 0l2.2 1.1a1 1 0 0 0 .9 0l2.21-1.1a3 3 0 0 1 2.69 0l2.2 1.1a1 1 0 0 0 .9 0l2.21-1.1a3 3 0 0 1 2.69 0l2.2 1.1a1 1 0 0 0 .86.02l2.88-1.27a3 3 0 0 1 2.43 0l2.88 1.27a1 1 0 0 0 .85-.02l3.1-1.55-.89-1.79-1.42.71a3 3 0 0 1-2.56.06l-2.77-1.23a1 1 0 0 0-.4-.09h-.01a1 1 0 0 0-.4.09l-2.78 1.23a3 3 0 0 1-2.56-.06l-2.3-1.15a1 1 0 0 0-.45-.11h-.01a1 1 0 0 0-.44.1l-2.21 1.11a3 3 0 0 1-2.69 0l-2.2-1.1a1 1 0 0 0-.45-.11h-.01a1 1 0 0 0-.44.1l-2.21 1.11a3 3 0 0 1-2.69 0l-2.2-1.1a1 1 0 0 0-.45-.11h-.01zm0-2h-4.9a21.01 21.01 0 0 1 39.61 0h-2.09l-.06-.13-.26.13h-32.31zm30.35 7.68l1.36-.68h1.3v2h-36v-1.15l.34-.17 1.36-.68h2.59l1.36.68a3 3 0 0 0 2.69 0l1.36-.68h2.59l1.36.68a3 3 0 0 0 2.69 0l1.36-.68h2.59l1.36.68a3 3 0 0 0 2.56.06l1.67-.74h3.23l1.67.74a3 3 0 0 0 2.56-.06zM246.18 27l16.37 4.91L278.93 27h-32.75zm-.63 2h.34l16.66 5 16.67-5h.33a3 3 0 1 1 0 6h-34a3 3 0 1 1 0-6zm1.35 8a6 6 0 0 0 5.65 4h20a6 6 0 0 0 5.66-4H246.9z'/%3E%3Cpath d='M159.5 21.02A9 9 0 0 0 151 15h-42a9 9 0 0 0-8.5 6.02 6 6 0 0 0 .02 11.96A8.99 8.99 0 0 0 109 45h42a9 9 0 0 0 8.48-12.02 6 6 0 0 0 .02-11.96zM151 17h-42a7 7 0 0 0-6.33 4h54.66a7 7 0 0 0-6.33-4zm-9.34 26a8.98 8.98 0 0 0 3.34-7h-2a7 7 0 0 1-7 7h-4.34a8.98 8.98 0 0 0 3.34-7h-2a7 7 0 0 1-7 7h-4.34a8.98 8.98 0 0 0 3.34-7h-2a7 7 0 0 1-7 7h-7a7 7 0 1 1 0-14h42a7 7 0 1 1 0 14h-9.34zM109 27a9 9 0 0 0-7.48 4H101a4 4 0 1 1 0-8h58a4 4 0 0 1 0 8h-.52a9 9 0 0 0-7.48-4h-42z'/%3E%3Cpath d='M39 115a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm6-8a6 6 0 1 1-12 0 6 6 0 0 1 12 0zm-3-29v-2h8v-6H40a4 4 0 0 0-4 4v10H22l-1.33 4-.67 2h2.19L26 130h26l3.81-40H58l-.67-2L56 84H42v-6zm-4-4v10h2V74h8v-2h-8a2 2 0 0 0-2 2zm2 12h14.56l.67 2H22.77l.67-2H40zm13.8 4H24.2l3.62 38h22.36l3.62-38z'/%3E%3Cpath d='M129 92h-6v4h-6v4h-6v14h-3l.24 2 3.76 32h36l3.76-32 .24-2h-3v-14h-6v-4h-6v-4h-8zm18 22v-12h-4v4h3v8h1zm-3 0v-6h-4v6h4zm-6 6v-16h-4v19.17c1.6-.7 2.97-1.8 4-3.17zm-6 3.8V100h-4v23.8a10.04 10.04 0 0 0 4 0zm-6-.63V104h-4v16a10.04 10.04 0 0 0 4 3.17zm-6-9.17v-6h-4v6h4zm-6 0v-8h3v-4h-4v12h1zm27-12v-4h-4v4h3v4h1v-4zm-6 0v-8h-4v4h3v4h1zm-6-4v-4h-4v8h1v-4h3zm-6 4v-4h-4v8h1v-4h3zm7 24a12 12 0 0 0 11.83-10h7.92l-3.53 30h-32.44l-3.53-30h7.92A12 12 0 0 0 130 126z'/%3E%3Cpath d='M212 86v2h-4v-2h4zm4 0h-2v2h2v-2zm-20 0v.1a5 5 0 0 0-.56 9.65l.06.25 1.12 4.48a2 2 0 0 0 1.94 1.52h.01l7.02 24.55a2 2 0 0 0 1.92 1.45h4.98a2 2 0 0 0 1.92-1.45l7.02-24.55a2 2 0 0 0 1.95-1.52L224.5 96l.06-.25a5 5 0 0 0-.56-9.65V86a14 14 0 0 0-28 0zm4 0h6v2h-9a3 3 0 1 0 0 6H223a3 3 0 1 0 0-6H220v-2h2a12 12 0 1 0-24 0h2zm-1.44 14l-1-4h24.88l-1 4h-22.88zm8.95 26l-6.86-24h18.7l-6.86 24h-4.98zM150 242a22 22 0 1 0 0-44 22 22 0 0 0 0 44zm24-22a24 24 0 1 1-48 0 24 24 0 0 1 48 0zm-28.38 17.73l2.04-.87a6 6 0 0 1 4.68 0l2.04.87a2 2 0 0 0 2.5-.82l1.14-1.9a6 6 0 0 1 3.79-2.75l2.15-.5a2 2 0 0 0 1.54-2.12l-.19-2.2a6 6 0 0 1 1.45-4.46l1.45-1.67a2 2 0 0 0 0-2.62l-1.45-1.67a6 6 0 0 1-1.45-4.46l.2-2.2a2 2 0 0 0-1.55-2.13l-2.15-.5a6 6 0 0 1-3.8-2.75l-1.13-1.9a2 2 0 0 0-2.5-.8l-2.04.86a6 6 0 0 1-4.68 0l-2.04-.87a2 2 0 0 0-2.5.82l-1.14 1.9a6 6 0 0 1-3.79 2.75l-2.15.5a2 2 0 0 0-1.54 2.12l.19 2.2a6 6 0 0 1-1.45 4.46l-1.45 1.67a2 2 0 0 0 0 2.62l1.45 1.67a6 6 0 0 1 1.45 4.46l-.2 2.2a2 2 0 0 0 1.55 2.13l2.15.5a6 6 0 0 1 3.8 2.75l1.13 1.9a2 2 0 0 0 2.5.8zm2.82.97a4 4 0 0 1 3.12 0l2.04.87a4 4 0 0 0 4.99-1.62l1.14-1.9a4 4 0 0 1 2.53-1.84l2.15-.5a4 4 0 0 0 3.09-4.24l-.2-2.2a4 4 0 0 1 .97-2.98l1.45-1.67a4 4 0 0 0 0-5.24l-1.45-1.67a4 4 0 0 1-.97-2.97l.2-2.2a4 4 0 0 0-3.09-4.25l-2.15-.5a4 4 0 0 1-2.53-1.84l-1.14-1.9a4 4 0 0 0-5-1.62l-2.03.87a4 4 0 0 1-3.12 0l-2.04-.87a4 4 0 0 0-4.99 1.62l-1.14 1.9a4 4 0 0 1-2.53 1.84l-2.15.5a4 4 0 0 0-3.09 4.24l.2 2.2a4 4 0 0 1-.97 2.98l-1.45 1.67a4 4 0 0 0 0 5.24l1.45 1.67a4 4 0 0 1 .97 2.97l-.2 2.2a4 4 0 0 0 3.09 4.25l2.15.5a4 4 0 0 1 2.53 1.84l1.14 1.9a4 4 0 0 0 5 1.62l2.03-.87zM152 207a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm6 2a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm-11 1a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm-6 0a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm3-5a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm-8 8a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm3 6a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm0 6a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm4 7a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm5-2a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm5 4a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm4-6a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm6-4a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm-4-3a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm4-3a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm-5-4a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm-24 6a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm16 5a5 5 0 1 0 0-10 5 5 0 0 0 0 10zm7-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0zm86-29a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm19 9a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm-14 5a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm-25 1a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm5 4a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm9 0a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm15 1a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm12-2a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm-11-14a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm-19 0a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm6 5a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm-25 15c0-.47.01-.94.03-1.4a5 5 0 0 1-1.7-8 3.99 3.99 0 0 1 1.88-5.18 5 5 0 0 1 3.4-6.22 3 3 0 0 1 1.46-1.05 5 5 0 0 1 7.76-3.27A30.86 30.86 0 0 1 246 184c6.79 0 13.06 2.18 18.17 5.88a5 5 0 0 1 7.76 3.27 3 3 0 0 1 1.47 1.05 5 5 0 0 1 3.4 6.22 4 4 0 0 1 1.87 5.18 4.98 4.98 0 0 1-1.7 8c.02.46.03.93.03 1.4v1h-62v-1zm.83-7.17a30.9 30.9 0 0 0-.62 3.57 3 3 0 0 1-.61-4.2c.37.28.78.49 1.23.63zm1.49-4.61c-.36.87-.68 1.76-.96 2.68a2 2 0 0 1-.21-3.71c.33.4.73.75 1.17 1.03zm2.32-4.54c-.54.86-1.03 1.76-1.49 2.68a3 3 0 0 1-.07-4.67 3 3 0 0 0 1.56 1.99zm1.14-1.7c.35-.5.72-.98 1.1-1.46a1 1 0 1 0-1.1 1.45zm5.34-5.77c-1.03.86-2 1.79-2.9 2.77a3 3 0 0 0-1.11-.77 3 3 0 0 1 4-2zm42.66 2.77c-.9-.98-1.87-1.9-2.9-2.77a3 3 0 0 1 4.01 2 3 3 0 0 0-1.1.77zm1.34 1.54c.38.48.75.96 1.1 1.45a1 1 0 1 0-1.1-1.45zm3.73 5.84c-.46-.92-.95-1.82-1.5-2.68a3 3 0 0 0 1.57-1.99 3 3 0 0 1-.07 4.67zm1.8 4.53c-.29-.9-.6-1.8-.97-2.67.44-.28.84-.63 1.17-1.03a2 2 0 0 1-.2 3.7zm1.14 5.51c-.14-1.21-.35-2.4-.62-3.57.45-.14.86-.35 1.23-.63a2.99 2.99 0 0 1-.6 4.2zM275 214a29 29 0 0 0-57.97 0h57.96zM72.33 198.12c-.21-.32-.34-.7-.34-1.12v-12h-2v12a4.01 4.01 0 0 0 7.09 2.54c.57-.69.91-1.57.91-2.54v-12h-2v12a1.99 1.99 0 0 1-2 2 2 2 0 0 1-1.66-.88zM75 176c.38 0 .74-.04 1.1-.12a4 4 0 0 0 6.19 2.4A13.94 13.94 0 0 1 84 185v24a6 6 0 0 1-6 6h-3v9a5 5 0 1 1-10 0v-9h-3a6 6 0 0 1-6-6v-24a14 14 0 0 1 14-14 5 5 0 0 0 5 5zm-17 15v12a1.99 1.99 0 0 0 1.22 1.84 2 2 0 0 0 2.44-.72c.21-.32.34-.7.34-1.12v-12h2v12a3.98 3.98 0 0 1-5.35 3.77 3.98 3.98 0 0 1-.65-.3V209a4 4 0 0 0 4 4h16a4 4 0 0 0 4-4v-24c.01-1.53-.23-2.88-.72-4.17-.43.1-.87.16-1.28.17a6 6 0 0 1-5.2-3 7 7 0 0 1-6.47-4.88A12 12 0 0 0 58 185v6zm9 24v9a3 3 0 1 0 6 0v-9h-6z'/%3E%3Cpath d='M-17 191a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm19 9a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2H3a1 1 0 0 1-1-1zm-14 5a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm-25 1a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm5 4a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm9 0a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm15 1a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm12-2a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2H4zm-11-14a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm-19 0a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm6 5a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm-25 15c0-.47.01-.94.03-1.4a5 5 0 0 1-1.7-8 3.99 3.99 0 0 1 1.88-5.18 5 5 0 0 1 3.4-6.22 3 3 0 0 1 1.46-1.05 5 5 0 0 1 7.76-3.27A30.86 30.86 0 0 1-14 184c6.79 0 13.06 2.18 18.17 5.88a5 5 0 0 1 7.76 3.27 3 3 0 0 1 1.47 1.05 5 5 0 0 1 3.4 6.22 4 4 0 0 1 1.87 5.18 4.98 4.98 0 0 1-1.7 8c.02.46.03.93.03 1.4v1h-62v-1zm.83-7.17a30.9 30.9 0 0 0-.62 3.57 3 3 0 0 1-.61-4.2c.37.28.78.49 1.23.63zm1.49-4.61c-.36.87-.68 1.76-.96 2.68a2 2 0 0 1-.21-3.71c.33.4.73.75 1.17 1.03zm2.32-4.54c-.54.86-1.03 1.76-1.49 2.68a3 3 0 0 1-.07-4.67 3 3 0 0 0 1.56 1.99zm1.14-1.7c.35-.5.72-.98 1.1-1.46a1 1 0 1 0-1.1 1.45zm5.34-5.77c-1.03.86-2 1.79-2.9 2.77a3 3 0 0 0-1.11-.77 3 3 0 0 1 4-2zm42.66 2.77c-.9-.98-1.87-1.9-2.9-2.77a3 3 0 0 1 4.01 2 3 3 0 0 0-1.1.77zm1.34 1.54c.38.48.75.96 1.1 1.45a1 1 0 1 0-1.1-1.45zm3.73 5.84c-.46-.92-.95-1.82-1.5-2.68a3 3 0 0 0 1.57-1.99 3 3 0 0 1-.07 4.67zm1.8 4.53c-.29-.9-.6-1.8-.97-2.67.44-.28.84-.63 1.17-1.03a2 2 0 0 1-.2 3.7zm1.14 5.51c-.14-1.21-.35-2.4-.62-3.57.45-.14.86-.35 1.23-.63a2.99 2.99 0 0 1-.6 4.2zM15 214a29 29 0 0 0-57.97 0h57.96z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"); */\n\n\n    background: linear-gradient(330deg, rgba(225, 225, 225, 0.05) 0%, rgba(225, 225, 225, 0.05) 33.333%,rgba(114, 114, 114, 0.05) 33.333%, rgba(114, 114, 114, 0.05) 66.666%,rgba(52, 52, 52, 0.05) 66.666%, rgba(52, 52, 52, 0.05) 99.999%),linear-gradient(66deg, rgba(181, 181, 181, 0.05) 0%, rgba(181, 181, 181, 0.05) 33.333%,rgba(27, 27, 27, 0.05) 33.333%, rgba(27, 27, 27, 0.05) 66.666%,rgba(251, 251, 251, 0.05) 66.666%, rgba(251, 251, 251, 0.05) 99.999%),linear-gradient(225deg, rgba(98, 98, 98, 0.05) 0%, rgba(98, 98, 98, 0.05) 33.333%,rgba(222, 222, 222, 0.05) 33.333%, rgba(222, 222, 222, 0.05) 66.666%,rgba(228, 228, 228, 0.05) 66.666%, rgba(228, 228, 228, 0.05) 99.999%),linear-gradient(90deg, rgb(28, 20, 63),rgb(40, 160, 253));\n    /* background-color: #eeffff; */\n    /* background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='260' height='260' viewBox='0 0 260 260'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23026ea5' fill-opacity='0.4'%3E%3Cpath d='M24.37 16c.2.65.39 1.32.54 2H21.17l1.17 2.34.45.9-.24.11V28a5 5 0 0 1-2.23 8.94l-.02.06a8 8 0 0 1-7.75 6h-20a8 8 0 0 1-7.74-6l-.02-.06A5 5 0 0 1-17.45 28v-6.76l-.79-1.58-.44-.9.9-.44.63-.32H-20a23.01 23.01 0 0 1 44.37-2zm-36.82 2a1 1 0 0 0-.44.1l-3.1 1.56.89 1.79 1.31-.66a3 3 0 0 1 2.69 0l2.2 1.1a1 1 0 0 0 .9 0l2.21-1.1a3 3 0 0 1 2.69 0l2.2 1.1a1 1 0 0 0 .9 0l2.21-1.1a3 3 0 0 1 2.69 0l2.2 1.1a1 1 0 0 0 .86.02l2.88-1.27a3 3 0 0 1 2.43 0l2.88 1.27a1 1 0 0 0 .85-.02l3.1-1.55-.89-1.79-1.42.71a3 3 0 0 1-2.56.06l-2.77-1.23a1 1 0 0 0-.4-.09h-.01a1 1 0 0 0-.4.09l-2.78 1.23a3 3 0 0 1-2.56-.06l-2.3-1.15a1 1 0 0 0-.45-.11h-.01a1 1 0 0 0-.44.1L.9 19.22a3 3 0 0 1-2.69 0l-2.2-1.1a1 1 0 0 0-.45-.11h-.01a1 1 0 0 0-.44.1l-2.21 1.11a3 3 0 0 1-2.69 0l-2.2-1.1a1 1 0 0 0-.45-.11h-.01zm0-2h-4.9a21.01 21.01 0 0 1 39.61 0h-2.09l-.06-.13-.26.13h-32.31zm30.35 7.68l1.36-.68h1.3v2h-36v-1.15l.34-.17 1.36-.68h2.59l1.36.68a3 3 0 0 0 2.69 0l1.36-.68h2.59l1.36.68a3 3 0 0 0 2.69 0L2.26 23h2.59l1.36.68a3 3 0 0 0 2.56.06l1.67-.74h3.23l1.67.74a3 3 0 0 0 2.56-.06zM-13.82 27l16.37 4.91L18.93 27h-32.75zm-.63 2h.34l16.66 5 16.67-5h.33a3 3 0 1 1 0 6h-34a3 3 0 1 1 0-6zm1.35 8a6 6 0 0 0 5.65 4h20a6 6 0 0 0 5.66-4H-13.1z'/%3E%3Cpath id='path6_fill-copy' d='M284.37 16c.2.65.39 1.32.54 2H281.17l1.17 2.34.45.9-.24.11V28a5 5 0 0 1-2.23 8.94l-.02.06a8 8 0 0 1-7.75 6h-20a8 8 0 0 1-7.74-6l-.02-.06a5 5 0 0 1-2.24-8.94v-6.76l-.79-1.58-.44-.9.9-.44.63-.32H240a23.01 23.01 0 0 1 44.37-2zm-36.82 2a1 1 0 0 0-.44.1l-3.1 1.56.89 1.79 1.31-.66a3 3 0 0 1 2.69 0l2.2 1.1a1 1 0 0 0 .9 0l2.21-1.1a3 3 0 0 1 2.69 0l2.2 1.1a1 1 0 0 0 .9 0l2.21-1.1a3 3 0 0 1 2.69 0l2.2 1.1a1 1 0 0 0 .86.02l2.88-1.27a3 3 0 0 1 2.43 0l2.88 1.27a1 1 0 0 0 .85-.02l3.1-1.55-.89-1.79-1.42.71a3 3 0 0 1-2.56.06l-2.77-1.23a1 1 0 0 0-.4-.09h-.01a1 1 0 0 0-.4.09l-2.78 1.23a3 3 0 0 1-2.56-.06l-2.3-1.15a1 1 0 0 0-.45-.11h-.01a1 1 0 0 0-.44.1l-2.21 1.11a3 3 0 0 1-2.69 0l-2.2-1.1a1 1 0 0 0-.45-.11h-.01a1 1 0 0 0-.44.1l-2.21 1.11a3 3 0 0 1-2.69 0l-2.2-1.1a1 1 0 0 0-.45-.11h-.01zm0-2h-4.9a21.01 21.01 0 0 1 39.61 0h-2.09l-.06-.13-.26.13h-32.31zm30.35 7.68l1.36-.68h1.3v2h-36v-1.15l.34-.17 1.36-.68h2.59l1.36.68a3 3 0 0 0 2.69 0l1.36-.68h2.59l1.36.68a3 3 0 0 0 2.69 0l1.36-.68h2.59l1.36.68a3 3 0 0 0 2.56.06l1.67-.74h3.23l1.67.74a3 3 0 0 0 2.56-.06zM246.18 27l16.37 4.91L278.93 27h-32.75zm-.63 2h.34l16.66 5 16.67-5h.33a3 3 0 1 1 0 6h-34a3 3 0 1 1 0-6zm1.35 8a6 6 0 0 0 5.65 4h20a6 6 0 0 0 5.66-4H246.9z'/%3E%3Cpath d='M159.5 21.02A9 9 0 0 0 151 15h-42a9 9 0 0 0-8.5 6.02 6 6 0 0 0 .02 11.96A8.99 8.99 0 0 0 109 45h42a9 9 0 0 0 8.48-12.02 6 6 0 0 0 .02-11.96zM151 17h-42a7 7 0 0 0-6.33 4h54.66a7 7 0 0 0-6.33-4zm-9.34 26a8.98 8.98 0 0 0 3.34-7h-2a7 7 0 0 1-7 7h-4.34a8.98 8.98 0 0 0 3.34-7h-2a7 7 0 0 1-7 7h-4.34a8.98 8.98 0 0 0 3.34-7h-2a7 7 0 0 1-7 7h-7a7 7 0 1 1 0-14h42a7 7 0 1 1 0 14h-9.34zM109 27a9 9 0 0 0-7.48 4H101a4 4 0 1 1 0-8h58a4 4 0 0 1 0 8h-.52a9 9 0 0 0-7.48-4h-42z'/%3E%3Cpath d='M39 115a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm6-8a6 6 0 1 1-12 0 6 6 0 0 1 12 0zm-3-29v-2h8v-6H40a4 4 0 0 0-4 4v10H22l-1.33 4-.67 2h2.19L26 130h26l3.81-40H58l-.67-2L56 84H42v-6zm-4-4v10h2V74h8v-2h-8a2 2 0 0 0-2 2zm2 12h14.56l.67 2H22.77l.67-2H40zm13.8 4H24.2l3.62 38h22.36l3.62-38z'/%3E%3Cpath d='M129 92h-6v4h-6v4h-6v14h-3l.24 2 3.76 32h36l3.76-32 .24-2h-3v-14h-6v-4h-6v-4h-8zm18 22v-12h-4v4h3v8h1zm-3 0v-6h-4v6h4zm-6 6v-16h-4v19.17c1.6-.7 2.97-1.8 4-3.17zm-6 3.8V100h-4v23.8a10.04 10.04 0 0 0 4 0zm-6-.63V104h-4v16a10.04 10.04 0 0 0 4 3.17zm-6-9.17v-6h-4v6h4zm-6 0v-8h3v-4h-4v12h1zm27-12v-4h-4v4h3v4h1v-4zm-6 0v-8h-4v4h3v4h1zm-6-4v-4h-4v8h1v-4h3zm-6 4v-4h-4v8h1v-4h3zm7 24a12 12 0 0 0 11.83-10h7.92l-3.53 30h-32.44l-3.53-30h7.92A12 12 0 0 0 130 126z'/%3E%3Cpath d='M212 86v2h-4v-2h4zm4 0h-2v2h2v-2zm-20 0v.1a5 5 0 0 0-.56 9.65l.06.25 1.12 4.48a2 2 0 0 0 1.94 1.52h.01l7.02 24.55a2 2 0 0 0 1.92 1.45h4.98a2 2 0 0 0 1.92-1.45l7.02-24.55a2 2 0 0 0 1.95-1.52L224.5 96l.06-.25a5 5 0 0 0-.56-9.65V86a14 14 0 0 0-28 0zm4 0h6v2h-9a3 3 0 1 0 0 6H223a3 3 0 1 0 0-6H220v-2h2a12 12 0 1 0-24 0h2zm-1.44 14l-1-4h24.88l-1 4h-22.88zm8.95 26l-6.86-24h18.7l-6.86 24h-4.98zM150 242a22 22 0 1 0 0-44 22 22 0 0 0 0 44zm24-22a24 24 0 1 1-48 0 24 24 0 0 1 48 0zm-28.38 17.73l2.04-.87a6 6 0 0 1 4.68 0l2.04.87a2 2 0 0 0 2.5-.82l1.14-1.9a6 6 0 0 1 3.79-2.75l2.15-.5a2 2 0 0 0 1.54-2.12l-.19-2.2a6 6 0 0 1 1.45-4.46l1.45-1.67a2 2 0 0 0 0-2.62l-1.45-1.67a6 6 0 0 1-1.45-4.46l.2-2.2a2 2 0 0 0-1.55-2.13l-2.15-.5a6 6 0 0 1-3.8-2.75l-1.13-1.9a2 2 0 0 0-2.5-.8l-2.04.86a6 6 0 0 1-4.68 0l-2.04-.87a2 2 0 0 0-2.5.82l-1.14 1.9a6 6 0 0 1-3.79 2.75l-2.15.5a2 2 0 0 0-1.54 2.12l.19 2.2a6 6 0 0 1-1.45 4.46l-1.45 1.67a2 2 0 0 0 0 2.62l1.45 1.67a6 6 0 0 1 1.45 4.46l-.2 2.2a2 2 0 0 0 1.55 2.13l2.15.5a6 6 0 0 1 3.8 2.75l1.13 1.9a2 2 0 0 0 2.5.8zm2.82.97a4 4 0 0 1 3.12 0l2.04.87a4 4 0 0 0 4.99-1.62l1.14-1.9a4 4 0 0 1 2.53-1.84l2.15-.5a4 4 0 0 0 3.09-4.24l-.2-2.2a4 4 0 0 1 .97-2.98l1.45-1.67a4 4 0 0 0 0-5.24l-1.45-1.67a4 4 0 0 1-.97-2.97l.2-2.2a4 4 0 0 0-3.09-4.25l-2.15-.5a4 4 0 0 1-2.53-1.84l-1.14-1.9a4 4 0 0 0-5-1.62l-2.03.87a4 4 0 0 1-3.12 0l-2.04-.87a4 4 0 0 0-4.99 1.62l-1.14 1.9a4 4 0 0 1-2.53 1.84l-2.15.5a4 4 0 0 0-3.09 4.24l.2 2.2a4 4 0 0 1-.97 2.98l-1.45 1.67a4 4 0 0 0 0 5.24l1.45 1.67a4 4 0 0 1 .97 2.97l-.2 2.2a4 4 0 0 0 3.09 4.25l2.15.5a4 4 0 0 1 2.53 1.84l1.14 1.9a4 4 0 0 0 5 1.62l2.03-.87zM152 207a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm6 2a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm-11 1a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm-6 0a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm3-5a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm-8 8a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm3 6a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm0 6a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm4 7a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm5-2a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm5 4a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm4-6a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm6-4a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm-4-3a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm4-3a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm-5-4a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm-24 6a1 1 0 1 1 2 0 1 1 0 0 1-2 0zm16 5a5 5 0 1 0 0-10 5 5 0 0 0 0 10zm7-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0zm86-29a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm19 9a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm-14 5a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm-25 1a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm5 4a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm9 0a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm15 1a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm12-2a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm-11-14a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm-19 0a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm6 5a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm-25 15c0-.47.01-.94.03-1.4a5 5 0 0 1-1.7-8 3.99 3.99 0 0 1 1.88-5.18 5 5 0 0 1 3.4-6.22 3 3 0 0 1 1.46-1.05 5 5 0 0 1 7.76-3.27A30.86 30.86 0 0 1 246 184c6.79 0 13.06 2.18 18.17 5.88a5 5 0 0 1 7.76 3.27 3 3 0 0 1 1.47 1.05 5 5 0 0 1 3.4 6.22 4 4 0 0 1 1.87 5.18 4.98 4.98 0 0 1-1.7 8c.02.46.03.93.03 1.4v1h-62v-1zm.83-7.17a30.9 30.9 0 0 0-.62 3.57 3 3 0 0 1-.61-4.2c.37.28.78.49 1.23.63zm1.49-4.61c-.36.87-.68 1.76-.96 2.68a2 2 0 0 1-.21-3.71c.33.4.73.75 1.17 1.03zm2.32-4.54c-.54.86-1.03 1.76-1.49 2.68a3 3 0 0 1-.07-4.67 3 3 0 0 0 1.56 1.99zm1.14-1.7c.35-.5.72-.98 1.1-1.46a1 1 0 1 0-1.1 1.45zm5.34-5.77c-1.03.86-2 1.79-2.9 2.77a3 3 0 0 0-1.11-.77 3 3 0 0 1 4-2zm42.66 2.77c-.9-.98-1.87-1.9-2.9-2.77a3 3 0 0 1 4.01 2 3 3 0 0 0-1.1.77zm1.34 1.54c.38.48.75.96 1.1 1.45a1 1 0 1 0-1.1-1.45zm3.73 5.84c-.46-.92-.95-1.82-1.5-2.68a3 3 0 0 0 1.57-1.99 3 3 0 0 1-.07 4.67zm1.8 4.53c-.29-.9-.6-1.8-.97-2.67.44-.28.84-.63 1.17-1.03a2 2 0 0 1-.2 3.7zm1.14 5.51c-.14-1.21-.35-2.4-.62-3.57.45-.14.86-.35 1.23-.63a2.99 2.99 0 0 1-.6 4.2zM275 214a29 29 0 0 0-57.97 0h57.96zM72.33 198.12c-.21-.32-.34-.7-.34-1.12v-12h-2v12a4.01 4.01 0 0 0 7.09 2.54c.57-.69.91-1.57.91-2.54v-12h-2v12a1.99 1.99 0 0 1-2 2 2 2 0 0 1-1.66-.88zM75 176c.38 0 .74-.04 1.1-.12a4 4 0 0 0 6.19 2.4A13.94 13.94 0 0 1 84 185v24a6 6 0 0 1-6 6h-3v9a5 5 0 1 1-10 0v-9h-3a6 6 0 0 1-6-6v-24a14 14 0 0 1 14-14 5 5 0 0 0 5 5zm-17 15v12a1.99 1.99 0 0 0 1.22 1.84 2 2 0 0 0 2.44-.72c.21-.32.34-.7.34-1.12v-12h2v12a3.98 3.98 0 0 1-5.35 3.77 3.98 3.98 0 0 1-.65-.3V209a4 4 0 0 0 4 4h16a4 4 0 0 0 4-4v-24c.01-1.53-.23-2.88-.72-4.17-.43.1-.87.16-1.28.17a6 6 0 0 1-5.2-3 7 7 0 0 1-6.47-4.88A12 12 0 0 0 58 185v6zm9 24v9a3 3 0 1 0 6 0v-9h-6z'/%3E%3Cpath d='M-17 191a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm19 9a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2H3a1 1 0 0 1-1-1zm-14 5a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm-25 1a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm5 4a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm9 0a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm15 1a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm12-2a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2H4zm-11-14a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm-19 0a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2h-2zm6 5a1 1 0 0 1 1-1h2a1 1 0 0 1 0 2h-2a1 1 0 0 1-1-1zm-25 15c0-.47.01-.94.03-1.4a5 5 0 0 1-1.7-8 3.99 3.99 0 0 1 1.88-5.18 5 5 0 0 1 3.4-6.22 3 3 0 0 1 1.46-1.05 5 5 0 0 1 7.76-3.27A30.86 30.86 0 0 1-14 184c6.79 0 13.06 2.18 18.17 5.88a5 5 0 0 1 7.76 3.27 3 3 0 0 1 1.47 1.05 5 5 0 0 1 3.4 6.22 4 4 0 0 1 1.87 5.18 4.98 4.98 0 0 1-1.7 8c.02.46.03.93.03 1.4v1h-62v-1zm.83-7.17a30.9 30.9 0 0 0-.62 3.57 3 3 0 0 1-.61-4.2c.37.28.78.49 1.23.63zm1.49-4.61c-.36.87-.68 1.76-.96 2.68a2 2 0 0 1-.21-3.71c.33.4.73.75 1.17 1.03zm2.32-4.54c-.54.86-1.03 1.76-1.49 2.68a3 3 0 0 1-.07-4.67 3 3 0 0 0 1.56 1.99zm1.14-1.7c.35-.5.72-.98 1.1-1.46a1 1 0 1 0-1.1 1.45zm5.34-5.77c-1.03.86-2 1.79-2.9 2.77a3 3 0 0 0-1.11-.77 3 3 0 0 1 4-2zm42.66 2.77c-.9-.98-1.87-1.9-2.9-2.77a3 3 0 0 1 4.01 2 3 3 0 0 0-1.1.77zm1.34 1.54c.38.48.75.96 1.1 1.45a1 1 0 1 0-1.1-1.45zm3.73 5.84c-.46-.92-.95-1.82-1.5-2.68a3 3 0 0 0 1.57-1.99 3 3 0 0 1-.07 4.67zm1.8 4.53c-.29-.9-.6-1.8-.97-2.67.44-.28.84-.63 1.17-1.03a2 2 0 0 1-.2 3.7zm1.14 5.51c-.14-1.21-.35-2.4-.62-3.57.45-.14.86-.35 1.23-.63a2.99 2.99 0 0 1-.6 4.2zM15 214a29 29 0 0 0-57.97 0h57.96z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"); */\n    /* background: linear-gradient(90deg, rgb(160, 222, 219),rgb(3, 165, 209)); */\n    background-attachment: fixed;\n    font-family: Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    \n    text-rendering: optimizeLegibility;\n}`;\n","export const theme = {\n    background: \"#ecf0f4\",\n    primary: \"#5580aa\",\n    primaryLight: \"#EFFFFA\",\n    primaryHover: \"#343078\",\n    mobile: \"576px\",\n    grey100: \"#F7FAFC\",\n    grey200: \"#EDF2F7\",\n    grey300: \"#E2E8F0\",\n    grey400: \"#CBD5E0\",\n    grey500: \"#A0AEC0\",\n    grey600: \"#718096\",\n    grey700: \"#4A5568\",\n    grey800: \"#2D3748\",\n    grey900: \"#1A202C\",\n    fontSize: \"1rem\",\n    borderRadius: \"50px\"\n};\n","import React from \"react\";\nimport Routes from \"./routes\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./global\";\nimport { theme } from \"./theme\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { SnackbarProvider } from \"notistack\";\n\nconst App = () => (\n    <SnackbarProvider maxSnack={3}>\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <>\n                <GlobalStyles />\n                <Routes />\n            </>\n        </ThemeProvider>\n    </SnackbarProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"typeface-roboto\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n// serviceWorker.register();\n"],"sourceRoot":""}