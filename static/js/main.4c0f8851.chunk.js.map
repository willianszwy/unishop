{"version":3,"sources":["assets/logo.svg","hooks/formHooks.js","services/auth.js","services/api.js","views/login.styled.js","components/Button/Button.styled.js","components/Button/index.js","components/Input/Input.styled.js","components/Input/index.js","components/ErrorShow/ErrorShow.styled.js","components/ErrorShow/index.js","views/login.js","views/logout.js","views/recovery.styled.js","views/recovery.js","views/register.styled.js","views/register.js","views/home.styled.js","views/home.js","routes.js","global.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useForm","callback","initialState","useState","inputs","setInputs","errors","setErrors","handleSubmit","event","preventDefault","handleInputChange","persist","target","name","value","isAuthenticated","localStorage","getItem","setUser","user","setItem","JSON","stringify","api","axios","create","baseURL","interceptors","request","use","a","config","token","headers","Authorization","StyledLogin","styled","div","props","theme","gray700","logo","Button","button","primary","fontSize","borderRadius","css","gray800","secondary","gray600","Input","input","ErrorShow","Login","history","push","username","password","post","response","data","access_token","msg","src","className","alt","onSubmit","type","placeholder","onChange","required","to","as","Link","Logout","removeItem","StyledRecovery","Recovery","email","console","log","StyledRegister","Register","registerHandle","usuario_nome","usuario_email","usuario_senha","validateForm","usuario_senha_confirmacao","StyledHome","Home","parse","PrivateRoute","Component","component","rest","render","pathname","state","from","location","Routes","path","exact","GlobalStyles","createGlobalStyle","background","primaryLight","primaryHover","mobile","gray100","gray200","gray300","gray400","gray500","gray900","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4c0f8851.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.01c07428.svg\";","import { useState } from \"react\";\n\nconst useForm = (callback, initialState) => {\n    const [inputs, setInputs] = useState(initialState);\n    const [errors, setErrors] = useState(\"\");\n    const handleSubmit = event => {\n        if (event) {\n            event.preventDefault();\n        }\n        callback(inputs);\n    };\n\n    const handleInputChange = event => {\n        setErrors(\"\");\n        event.persist();\n        setInputs(inputs => ({\n            ...inputs,\n            [event.target.name]: event.target.value\n        }));\n    };\n\n    return {\n        errors,\n        setErrors,\n        handleSubmit,\n        handleInputChange,\n        inputs\n    };\n};\nexport default useForm;\n","export const TOKEN_KEY = \"Unishop-Token\";\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\nexport const login = data => {\n    localStorage.setItem(TOKEN_KEY, data.access_token);\n    setUser(data.user);\n};\n\nexport const logout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(\"currentUser\");\n};\nexport const getUser = () => JSON.parse(localStorage.getItem(\"currentUser\"));\nexport const setUser = user =>\n    localStorage.setItem(\"currentUser\", JSON.stringify(user));\n","import axios from \"axios\";\nimport { getToken } from \"./auth\";\n\nconst api = axios.create({\n    baseURL: \"http://localhost:5000\"\n});\n\napi.interceptors.request.use(async config => {\n    const token = getToken();\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\nexport default api;\n","import styled from \"styled-components\";\nimport logo from \"../assets/logo.svg\";\n\nexport const StyledLogin = styled.div`\n    border: 2px solid ${props => props.theme.gray700};\n    padding: 2rem;\n    margin: 50px auto;\n    max-width: 600px;\n    border-radius: 10px;\n    background: #fff;\n    color: black;\n\n    @media (max-width: 765px) {\n        margin: 50px 10px;\n    }\n    img {\n        display: block;\n        width: 50%;\n        margin: 20px auto;\n    }\n\n    .logo {\n        height: 80px;\n        background: linear-gradient(\n            90deg,\n            rgb(160, 222, 219),\n            rgb(3, 165, 209)\n        );\n        -webkit-mask: url(${logo}) no-repeat center;\n        mask: url(${logo}) no-repeat center;\n    }\n\n    a,\n    a:visited,\n    a:hover,\n    a:active {\n        color: inherit;\n    }\n`;\n","import styled, { css } from \"styled-components\";\n\nexport const StyledButton = styled.button`\n    display: block;\n\n    padding: 1rem 0;\n    margin: 0.5rem 0;\n    width: 100%;\n    background: ${props => props.theme.primary};\n    font-size: ${props => props.theme.fontSize};\n    border-radius: ${props => props.theme.borderRadius};\n    text-align: center;\n    text-decoration: none;\n    color: white !important;\n    border: none;\n    cursor: pointer;\n\n    ${props =>\n        props.primary &&\n        css`\n            background: ${props => props.theme.gray800};\n            /* background: linear-gradient(\n                    145deg,\n                    rgba(232, 87, 237, 0.15) 0%,\n                    rgba(109, 137, 69, 0.15) 100%\n                ),\n                linear-gradient(75deg, rgb(33, 138, 184), rgb(0, 241, 181));\n            color: white; */\n        `}\n\n    ${props =>\n        props.secondary &&\n        css`\n            background: ${props => props.theme.gray600};\n            color: white;\n        `}\n`;\n","import { StyledButton } from \"./Button.styled\";\n\nconst Button = StyledButton;\n\nexport default Button;\n","import styled from \"styled-components\";\n\nexport const StyledInput = styled.input`\n    display: block;\n    width: 100%;\n    background: white;\n    color: black;\n    border: 2px solid black;\n    padding: 1em;\n    margin: 0.5em 0;\n    font-size: ${props => props.theme.fontSize};\n    border-radius: ${props => props.theme.borderRadius};\n`;\n","import { StyledInput } from \"./Input.styled\";\n\nconst Input = StyledInput;\n\nexport default Input;\n","import styled from \"styled-components\";\n\nexport const StyledErrorShow = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    min-height: 50px;\n    color: hsl(0, 100%, 60%);\n    background: hsl(0, 100%, 85%);\n    border: 1px solid hsl(0, 100%, 60%);\n`;\n","import { StyledErrorShow } from \"./ErrorShow.styled\";\n\nconst ErrorShow = StyledErrorShow;\n\nexport default ErrorShow;\n","import React from \"react\";\nimport logo from \"../assets/logo.svg\";\nimport useForm from \"../hooks/formHooks\";\nimport api from \"../services/api\";\nimport { login, isAuthenticated } from \"../services/auth\";\nimport { StyledLogin } from \"./login.styled\";\nimport { Button, Input, ErrorShow } from \"../components\";\nimport { Link } from \"react-router-dom\";\n\nconst Login = props => {\n    if (isAuthenticated()) {\n        props.history.push(\"/\");\n    }\n    const loginHandle = async inputs => {\n        setErrors(\"\");\n        try {\n            const { username, password } = inputs;\n            const response = await api.post(\"/login\", {\n                username: username,\n                password: password\n            });\n\n            login(response.data);\n\n            props.history.push(\"/\");\n        } catch (error) {\n            if (error.response) {\n                setErrors(error.response.data.msg);\n            } else if (error.request) {\n                setErrors(\"Erro ao conectar o servidor\");\n            } else {\n                setErrors(error);\n            }\n        }\n    };\n\n    const initialState = { username: \"\", password: \"\" };\n    const {\n        inputs,\n        handleInputChange,\n        handleSubmit,\n        errors,\n        setErrors\n    } = useForm(loginHandle, initialState);\n    return (\n        <StyledLogin>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <form onSubmit={handleSubmit}>\n                {errors && <ErrorShow>{errors}</ErrorShow>}\n                <div>\n                    <Input\n                        type=\"email\"\n                        name=\"username\"\n                        placeholder=\"Email\"\n                        onChange={handleInputChange}\n                        value={inputs.username}\n                        required\n                    />\n                </div>\n                <div>\n                    <Input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Senha\"\n                        onChange={handleInputChange}\n                        value={inputs.password}\n                        required\n                    />\n                </div>\n                <Button type=\"submit\" primary>\n                    Entrar\n                </Button>\n            </form>\n            <Link to=\"/recovery\">Esqueci a senha</Link>\n            <Button as={Link} to=\"register\">\n                Registre-se\n            </Button>\n        </StyledLogin>\n    );\n};\n\nexport default Login;\n","import { logout } from \"../services/auth\";\n\nconst Logout = props => {\n    logout();\n    props.history.push(\"/\");\n    return \"\";\n};\n\nexport default Logout;\n","import styled from \"styled-components\";\n\nexport const StyledRecovery = styled.div`\n    border: 2px solid ${props => props.theme.gray700};\n    padding: 2rem;\n    margin: 50px auto;\n    max-width: 600px;\n    border-radius: 10px;\n    background: #fff;\n    color: black;\n\n    @media (max-width: 765px) {\n        margin: 50px 10px;\n    }\n\n    a,\n    a:visited,\n    a:hover,\n    a:active {\n        color: inherit;\n    }\n`;\n","import React from \"react\";\nimport { StyledRecovery } from \"./recovery.styled\";\nimport useForm from \"../hooks/formHooks\";\nimport api from \"../services/api\";\nimport { isAuthenticated } from \"../services/auth\";\nimport { Button, Input } from \"../components\";\nimport { Link } from \"react-router-dom\";\n\nconst Recovery = props => {\n    if (isAuthenticated()) {\n        props.history.push(\"/\");\n    }\n    const recoveryHandle = async inputs => {\n        try {\n            const { email } = inputs;\n            await api.post(\"/recuperar\", {\n                email\n            });\n            props.history.push(\"/\");\n        } catch (err) {\n            console.log(err);\n        }\n    };\n    const initialState = { email: \"\" };\n    const { inputs, handleInputChange, handleSubmit } = useForm(\n        recoveryHandle,\n        initialState\n    );\n    return (\n        <StyledRecovery>\n            <div>\n                <Link to=\"/login\">Voltar</Link>\n            </div>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <Input\n                        type=\"email\"\n                        name=\"username\"\n                        placeholder=\"Email\"\n                        onChange={handleInputChange}\n                        value={inputs.username}\n                        required\n                    />\n                </div>\n\n                <Button type=\"submit\">Enviar</Button>\n            </form>\n        </StyledRecovery>\n    );\n};\n\nexport default Recovery;\n","import styled from \"styled-components\";\n\nexport const StyledRegister = styled.div`\n    border: 2px solid ${props => props.theme.gray700};\n    padding: 2rem;\n    margin: 50px auto;\n    max-width: 600px;\n    border-radius: 10px;\n    background: #fff;\n    color: black;\n\n    @media (max-width: 765px) {\n        margin: 50px 10px;\n    }\n\n    a,\n    a:visited,\n    a:hover,\n    a:active {\n        color: inherit;\n    }\n`;\n","import React from \"react\";\nimport useForm from \"../hooks/formHooks\";\nimport api from \"../services/api\";\nimport { isAuthenticated } from \"../services/auth\";\nimport { StyledRegister } from \"./register.styled\";\nimport { Button, Input, ErrorShow } from \"../components\";\nimport { Link } from \"react-router-dom\";\n\nconst Register = props => {\n    if (isAuthenticated()) {\n        props.history.push(\"/\");\n    }\n    const registerHandle = async inputs => {\n        try {\n            const { usuario_nome, usuario_email, usuario_senha } = inputs;\n            if (validateForm()) {\n                await api.post(\"/usuarios\", {\n                    usuario_nome,\n                    usuario_email,\n                    usuario_senha\n                });\n                props.history.push(\"/\");\n            } else {\n                setErrors(\"Senhas digitadas não conferem!\");\n            }\n        } catch (error) {\n            if (error.response) {\n                setErrors(error.response.data.msg);\n            } else if (error.request) {\n                setErrors(\"Erro ao conectar o servidor\");\n            } else {\n                setErrors(error);\n            }\n        }\n    };\n    const validateForm = () => {\n        return inputs.usuario_senha === inputs.usuario_senha_confirmacao;\n    };\n    const initialState = {\n        usuario_nome: \"\",\n        usuario_email: \"\",\n        usuario_senha: \"\",\n        usuario_senha_confirmacao: \"\"\n    };\n    const {\n        inputs,\n        handleInputChange,\n        handleSubmit,\n        errors,\n        setErrors\n    } = useForm(registerHandle, initialState);\n    return (\n        <StyledRegister>\n            <div>\n                <Link to=\"/login\">Voltar</Link>\n            </div>\n            {errors && <ErrorShow>{errors}</ErrorShow>}\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <Input\n                        type=\"text\"\n                        name=\"usuario_nome\"\n                        placeholder=\"Nome Completo\"\n                        onChange={handleInputChange}\n                        value={inputs.usuario_nome}\n                        required\n                    />\n                </div>\n                <div>\n                    <Input\n                        type=\"email\"\n                        name=\"usuario_email\"\n                        placeholder=\"Email\"\n                        onChange={handleInputChange}\n                        value={inputs.usuario_email}\n                        required\n                    />\n                </div>\n                <div>\n                    <Input\n                        type=\"password\"\n                        placeholder=\"Senha\"\n                        name=\"usuario_senha\"\n                        onChange={handleInputChange}\n                        value={inputs.usuario_senha}\n                        required\n                    />\n                </div>\n                <div>\n                    <Input\n                        type=\"password\"\n                        placeholder=\"Confirmar Senha\"\n                        name=\"usuario_senha_confirmacao\"\n                        onChange={handleInputChange}\n                        value={inputs.usuario_senha_confirmacao}\n                        required\n                    />\n                </div>\n                <Button type=\"submit\">Cadastrar</Button>\n            </form>\n        </StyledRegister>\n    );\n};\n\nexport default Register;\n","import styled from \"styled-components\";\n\nexport const StyledHome = styled.div`\n    border: 2px solid ${props => props.theme.gray700};\n    padding: 2rem;\n    margin: 50px auto;\n    max-width: 600px;\n    border-radius: 10px;\n    background: #fff;\n    color: black;\n\n    @media (max-width: 765px) {\n        margin: 50px 10px;\n    }\n`;\n","import React from \"react\";\nimport { StyledHome } from \"./home.styled\";\nimport { getUser } from \"../services/auth\";\n\nconst Home = () => {\n    const user = getUser();\n    return (\n        <StyledHome>\n            <h1>Hello {user.usuario_nome}!</h1>\n        </StyledHome>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Route,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\n\nimport Login from \"./views/login\";\nimport Logout from \"./views/logout\";\nimport Recovery from \"./views/recovery\";\nimport Register from \"./views/register\";\nimport Home from \"./views/home\";\n\nimport { isAuthenticated } from \"./services/auth\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{ pathname: \"/login\", state: { from: props.location } }}\n                />\n            )\n        }\n    />\n);\n\nconst Routes = () => (\n    <Router>\n        <Switch>\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/logout\" exact component={Logout} />\n            <Route path=\"/register/\" component={Register} />\n            <Route path=\"/recovery/\" component={Recovery} />\n            <PrivateRoute path=\"/\" component={Home} />\n            <Route path=\"*\" component={() => <Redirect to=\"/\" />} />\n        </Switch>\n    </Router>\n);\n\nexport default Routes;\n","// global.js\nimport { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\nhtml, body {\n    margin: 0;\n    padding: 0;\n}\n\na {\n    text-decoration: none;\n}\n\n\n*, *::after, *::before {\n    box-sizing: border-box;\n}\n\nbody {\n    \n    background: ${({ theme }) => theme.background};\n    color: ${({ theme }) => theme.primaryLight};\n    \n    /* height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center; */\n    \n\n    /* background: linear-gradient(90deg, rgb(160, 222, 219),rgb(3, 165, 209)); */\n\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    text-rendering: optimizeLegibility;\n}`;\n","export const theme = {\n    background: \"#ecf0f4\",\n    primary: \"#5580aa\",\n    primaryLight: \"#EFFFFA\",\n    primaryHover: \"#343078\",\n    mobile: \"576px\",\n    gray100: \"#F7FAFC\",\n    gray200: \"#EDF2F7\",\n    gray300: \"#E2E8F0\",\n    gray400: \"#CBD5E0\",\n    gray500: \"#A0AEC0\",\n    gray600: \"#718096\",\n    gray700: \"#4A5568\",\n    gray800: \"#2D3748\",\n    gray900: \"#1A202C\",\n    fontSize: \"1rem\",\n    borderRadius: \"5px\"\n};\n","import React from \"react\";\nimport Routes from \"./routes\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./global\";\nimport { theme } from \"./theme\";\n\nconst App = () => (\n    <ThemeProvider theme={theme}>\n        <>\n            <GlobalStyles />\n            <Routes />\n        </>\n    </ThemeProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport \"normalize.css\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}